#include "common.h"
#include "light.h"
#include "shadow.h"
#include "gbuffer.h"

//uniform 	float4 	out_filter;

#ifdef USE_SUNFILTER
float4 	main		( v2p_TL2uv I ) : SV_TARGET
{
  float4 	_P	= t_position.Sample	(s_position, 	I.Tex0)	;
		_P.w 	= 1.f					;
	float4 	PS	= mul		(m_shadow, 	_P)	;
	float 	s 	= shadowtest_sun(PS,tcJ)*sunmask(_P)	;
	return 	s	;
}
#else
float4 	main		( v2p_sun I ) : SV_TARGET
{
//  float4 _P		= t_position.Sample 	(s_position, 	I.Tex0);
//  float4  _N		= t_normal.Sample 	(s_normal,   	I.Tex0);

	float4 _P		= gbuffer_read_rt_position	( I.Tex0, I.eye_ray);
	float4 _N		= gbuffer_read_rt_normal	( I.Tex0);


	// ----- light-model
	float 	m;
# ifndef USE_R2_STATIC_SUN
			m 	= _P.w		;
# endif
	m = 10.f;//
	float4	light 	= phong_infinity (m, _P.xyz, _N.xyz, light_direction.xyz);

	// ----- shadow
//  	float4 	P4 	= float4	(_P.x,_P.y,_P.z,1.f);
//	float4 	PS	= mul		(m_shadow, 	P4);
//	float 	s 	= sunmask	(P4);
	#ifdef 	USE_SJITTER
//	  s 	*= shadowtest_sun 	(PS,tcJ);
	#else
//	  s 	*= shadow		(PS);
	#endif
	
	float s=1;
	
	return 		blend		/*(float4(1,0,0,1),tc);//*/(light_color * light * s, I.Tex0);
}
#endif