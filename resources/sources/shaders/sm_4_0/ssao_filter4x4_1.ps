////////////////////////////////////////////////////////////////////////////
//	Created		: 11.04.2011
//	Author		: Nikolay Partas
//	Copyright (C) GSC Game World - 2011
////////////////////////////////////////////////////////////////////////////

#include "common.h"
#include "gbuffer.h"
#include "filters.h"

Texture2D  t_ssao_accumulator;
uniform float4 screen_res; // Screen resolution (x-Width,y-Height, zw - 1/resolution)

float4 main( v2p_post_process input) : SV_TARGET
{
	//return t_ssao_accumulator.Sample(s_material1, input.uv).x;
	
	static const float2 offsets[9] = 
	{
		float2( 1.0f,  1.0f),
		float2( 1.0f,  0.0f),
		float2( 1.0f, -1.0f),
		float2( 0.0f,  1.0f),
		float2( 0.0f, -1.0f), 
		float2(-1.0f,  1.0f),
		float2(-1.0f,  0.0f),
		float2(-1.0f, -1.0f),
		float2( 0.0f,  0.0f)
	};

	float total_weight 	= 0.0f;
	float ao_sum 		= 0.0f;
	float center_depth 	= gbuffer_read_frame_depth(input.uv);
	
	for (int i=0; i<9; i++)
	{
		float2 sample_uv	  = input.uv + offsets[i] / screen_res.xy * 1.0f;
		float sample_ao		  = t_ssao_accumulator.Sample(s_material1, sample_uv).x;
		float sample_depth 	  = gbuffer_read_frame_depth(sample_uv);
		
		float depth_compares  = 1.0f - saturate(pow((center_depth - sample_depth), 2) / (0.00001f * sample_depth));
		
		depth_compares 		  += 0.02f;
		
		total_weight 		  += depth_compares;
		
		ao_sum 				  += sample_ao * depth_compares;
	}
	return ao_sum / total_weight;
}
