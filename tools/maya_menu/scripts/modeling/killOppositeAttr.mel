//Used in TinyTools.melglobal proc killOppositeAttr(){	string $KOPP_list[] = `ls -g`;	string $KOPP_object;	int $KOPP_oppMesh = 0, $KOPP_oppSurf = 0;	for ($KOPP_object in $KOPP_list)	{		string $KOPP_intermed = $KOPP_object + ".intermediateObject";		int $KOPP_intermedCheck = `getAttr $KOPP_intermed`;		if (`nodeType $KOPP_object` == "nurbsSurface" || `nodeType $KOPP_object` == "mesh" && $KOPP_intermedCheck == 0)		{			string $KOPP_opp = $KOPP_object + ".opposite";			string $KOPP_2sided = $KOPP_object + ".doubleSided";			int $KOPP_value = `getAttr $KOPP_opp`;			if ($KOPP_value == 1)			{				setAttr $KOPP_opp 0;				setAttr $KOPP_2sided 0;				if (`nodeType $KOPP_object` == "nurbsSurface")				{					reverseSurface -d 3 -ch 0 $KOPP_object;					print ("KILL OPPOSITE ATTRIBUTE : " + $KOPP_object + " .Opposite and .doubleSided set to 0 - Surface reversed \n");					$KOPP_oppSurf += 1;				}				else if (`nodeType $KOPP_object` == "mesh")				{					polyNormal -normalMode 0 -ch 1 $KOPP_object;					print ("KILL OPPOSITE ATTRIBUTE : " + $KOPP_object + " .Opposite and .doubleSided attributes set to 0 - Mesh reversed \n");					$KOPP_oppMesh += 1;				}			}		}		else			print ("KILL OPPOSITE ATTRIBUTE : " + $KOPP_object + " is an intermediate object, check if it is not an historic shape - skipped \n");	}//select -cl;print ("KILL OPPOSITE ATTRIBUTE : ok" + $KOPP_oppMesh + " meshes and " + $KOPP_oppSurf + " surfaces reversed \n");}