//==============================================================================
//Name:
//  planarMappingTriming.mel
//==============================================================================
//Purpose:
//planarMappingTriming;						//automapPlanar, with face ratio.
//planarMappingTriming; with press "Ctrl"	//automapPlanar, stretch to square.
//==============================================================================
//Usage:
//  1. Save the planarMappingTriming.mel to your scripts directory.
//  2. Start Maya. In the command line type planarMappingTriming();
//  3. Middlemouse drag to a shelf you like.
//==============================================================================

global proc planarMappingTriming()
{
timerstart;
undoInfo -state off;
constructionHistory -tgl off;

////////////////////////////////////////////////////////////////////////////////
//keysPressed == "Ctrl"
////////////////////////////////////////////////////////////////////////////////

if (keysPressed() == "Ctrl")
	{
	ConvertSelectionToFaces;
	global string $xts_lastTrimUVs[];

	 string $faces[] = `ls -sl -fl`;
	 if(size($faces) > 0)
	 {
	    global string $gSelect;
	    setToolTo $gSelect;
	    string $allfaces[] = `ls -sl -fl`;
	    clear($xts_lastTrimUVs);
	    int $progress = 0;
	    progressWindow -title "TrimTexturing" -progress $progress -status "Completed: 0%" -isInterruptable true;
	    for($j = 0; $j < size($allfaces);$j++)
	    	{
	        if (`progressWindow -query -isCancelled`) break;
	        $progress = floor((float($j)/float(size($allfaces)))*100);
	        if ($progress <= 1) $progress = 1;
	        progressWindow -edit -progress $progress -status ("Completed: "+$progress+"%");
	        select -r $allfaces[$j];
//	        $projection = `polyProjection -ch 0 -type Planar -ibd off -icx 0.5 -icy 0.5 -ra 0 -isu 1 -isv 1 -md y`;
            $projection = `polyProjection -ch 0 -type Planar -ibd on -kir -md y`;
	        ConvertSelectionToUVs;
	        string $ms_uvs[] = `ls -sl -fl`;
	        $ms_xuv = 0;
	        $ms_yuv = 0;
	        for($i = 0; $i < size($ms_uvs);$i++)
	        	{
	            $xts_lastTrimUVs[size($xts_lastTrimUVs)]=$ms_uvs[$i];
	            if(size($ms_uvs) == 4)
	            	{
	                select -r $ms_uvs[$i];
	                if($i == 0)
	                	{
	                    polyEditUV -r false -u 0 -v 0 ;
	                	}
	                    else if($i == 1)
	                    {
	                    polyEditUV -r false -u 1 -v 0 ;
	                	}
	                    else if($i == 2)
	                    {
	                    polyEditUV -r false -u 1 -v 1 ;
	                	}
	                    else if($i == 3)
	                    {
	                    polyEditUV -r false -u 0 -v 1 ;
	                }
	            }
	        }
	    }
	progressWindow -edit -progress 100 -status ("Completed: 100%");
	progressWindow -endProgress;
	select -r $allfaces;
	}
}

////////////////////////////////////////////////////////////////////////////////
//keysPressed == "None"
////////////////////////////////////////////////////////////////////////////////

else
{
undoInfo -state off;
constructionHistory -tgl off;
int $progress = 0;
progressWindow -title "TrimTexturing" -progress $progress -status "Completed: 0%" -isInterruptable true;
    {
    ConvertSelectionToFaces;
    $width = 500;
    $height = 500;
    $sel = `ls -sl -fl`;
for ($i = 0; $i <= `size $sel`-1; $i++)
        {
    if (`progressWindow -query -isCancelled`) break;
    $progress = floor((float($i)/float(size($sel)))*100);
    if ($progress <= 1) $progress = 1;
    progressWindow -edit -progress $progress -status ("Completed: "+$progress+"%");

            select -r $sel[$i];
            $t = `polyProjection -ch 1 -type Planar -ibd on -icx 0.5 -icy 0.5 -ra 0 -isu 1 -isv 1 -md b $sel[$i]`;
//            $t = `polyProjection -ch 0 -type Planar -ibd on -kir -md b $sel[$i]`;
    setAttr ($t[0]+".projectionWidth") $width;
    setAttr ($t[0]+".projectionHeight") $height;
    }
    progressWindow -edit -progress 100 -status ("Completed: 100%");
progressWindow -endProgress;
    select -r $sel;
	}
}
undoInfo -state on;
constructionHistory -tgl on;
print ("Progress working time: " + timerquery());
}


////////////////////////////////////////////////////////////////////////////////
//Utils
////////////////////////////////////////////////////////////////////////////////
global proc timerstart()
{
global float $GstartTime;
float $GstartTime = `timerX`;
}
////////////////////////////////////////////////////////////////////////////////
global proc float timerquery()
{
global float $GstartTime;
$totalTime = `timerX -startTime $GstartTime`;
return $totalTime;
}
////////////////////////////////////////////////////////////////////////////////