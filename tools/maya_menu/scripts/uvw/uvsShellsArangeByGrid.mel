//==============================================================================//Name://  uvsShellsArangeByGrid.mel//==============================================================================//Purpose://uvsShellsArangeByGrid; 					//uvs Shells Arange By Grid.//==============================================================================//Usage://  1. Save the uvsShellsArangeByGrid.mel to your scripts directory.//  2. Start Maya. In the command line type uvsShellsArangeByGrid();//  3. Middlemouse drag to a shelf you like.//==============================================================================global proc uvsShellsArangeByGrid(){$obj = `ls -sl`;$shellsUV = getUVShells($obj);string $shell;float $us[] = {};float $vs[] = {};for ($shell in $shellsUV)        {//$shell = $shellsUV[0];        $shellArray = stringToStringArray($shell, " ");        $BB = uvsShellBBsize($shellArray);        $us[`size $us`] = $BB[0];        $vs[`size $vs`] = $BB[1];        }float $maxU = maxOf($us);float $maxV = maxOf($vs);$shells = `size $us`;int $side = sqrt($shells);$uWidth = $maxU * $side;$vWidth = $maxV * $side;$sideWidth = ($uWidth + $vWidth) / 2;$side = $sideWidth / $maxU;float $uNum = 1;float $vNum = 1;float $distBetween = 0.00;for ($shell in $shellsUV)        {//$shell = $shellsUV[0];        $numIn = forInNum($shell, $shellsUV);        $shellArray = stringToStringArray($shell, " ");//select $shellArray;        float $uPos = $uNum * $maxU;        float $vPos = $vNum * $maxV * -1;        moveUvsAbs($shellArray, {$uPos * (1 + $distBetween), $vPos * -1 * (1 + $distBetween)});        $uNum++;        if($uNum > $side)                {                $uNum = 1;                $vNum++;                }        print "\n";        print ("shell " + $numIn + " of " + `size $shellsUV`);        }select (conv($obj, "u"));}