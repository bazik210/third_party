<html><body><font FACE="Courier New" SIZE="2"><p><b><font SIZE=3>__assume</font></b></p><ul><li>void(int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">microsoft-style assume intrinsic</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicAdd32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr, unsigned_int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically add the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicAdd64</font></b></p><ul><li>uint64(unsigned_long_long_ptr, uint64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically add the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicAnd32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr, unsigned_int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically 'and' the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicAnd64</font></b></p><ul><li>uint64(unsigned_long_long_ptr, uint64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically 'and' the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicCompareAndSwap32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr, unsigned_int, unsigned_int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically compare the pointed location to the compare value and if it is equal store the value to it. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicCompareAndSwap64</font></b></p><ul><li>uint64(unsigned_long_long_ptr, uint64, uint64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically compare the pointed location to the compare value and if it is equal store the value to it. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicDecr32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically decrement the the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicDecr64</font></b></p><ul><li>uint64(unsigned_long_long_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically decrement the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicIncr32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically increment the the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicIncr64</font></b></p><ul><li>uint64(unsigned_long_long_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically increment the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicLockLine32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically lock the pointed to location. Returns the value at the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicLockLine64</font></b></p><ul><li>uint64(unsigned_long_long_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically lock the pointed to location. Returns the value at the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicNop32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically read the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicNop64</font></b></p><ul><li>uint64(unsigned_long_long_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically read the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicOr32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr, unsigned_int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically 'or' the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicOr64</font></b></p><ul><li>uint64(unsigned_long_long_ptr, uint64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically 'or' the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicStore32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr, unsigned_int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically store the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicStore64</font></b></p><ul><li>uint64(unsigned_long_long_ptr, uint64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically store the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicStoreConditional32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr, unsigned_int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Attempt an atomic store to the pointed location. Returns a bool indicating success.</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicStoreConditional64</font></b></p><ul><li>unsigned_int(unsigned_long_long_ptr, uint64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Attempt an atomic store to the pointed location. Returns a bool indicating success.</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicSub32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr, unsigned_int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically subtract the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicSub64</font></b></p><ul><li>uint64(unsigned_long_long_ptr, uint64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically subtract the value to the pointed location. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicTestAndDecr32</font></b></p><ul><li>unsigned_int(unsigned_int_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically read the pointed location and if it is non-zero decrement it. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_cellAtomicTestAndDecr64</font></b></p><ul><li>uint64(unsigned_long_long_ptr)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Atomically read the pointed location and if it is non-zero decrement it. Returns the old value from the pointed location</font></p></ul><p><b><font SIZE=3>__builtin_clz</font></b></p><ul><li>int(int)</li></ul><p><b><font SIZE=3>__builtin_clzl</font></b></p><ul><li>uint64(uint64)</li></ul><p><b><font SIZE=3>__builtin_clzll</font></b></p><ul><li>uint64(uint64)</li></ul><p><b><font SIZE=3>__builtin_constant_p</font></b></p><ul><li>int(rargs)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">returns true if parameter is constant</font></p></ul><p><b><font SIZE=3>__builtin_dcbf</font></b></p><ul><li>volatile_void(const_void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_dcbi</font></b></p><ul><li>volatile_void(void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_dcbst</font></b></p><ul><li>volatile_void(const_void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_dcbt</font></b></p><ul><li>volatile_void(const_void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_dcbt3</font></b></p><ul><li>volatile_void(unsigned_int, int, int)</li></ul><p><b><font SIZE=3>__builtin_dcbtst</font></b></p><ul><li>volatile_void(void_ptr, int64)</li></ul><p><b><font SIZE=3>__builtin_dcbz</font></b></p><ul><li>volatile_void(void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_eieio</font></b></p><ul><li>volatile_void()</li></ul><p><b><font SIZE=3>__builtin_expect</font></b></p><ul><li>int(int, int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">branch hint. if( __builtin_expect( x == y, 1 ) ) is the same as if( x == y ) but implies that x == y is likely</font></p></ul><p><b><font SIZE=3>__builtin_fabs</font></b></p><ul><li>double(double)</li></ul><p><b><font SIZE=3>__builtin_fabsf</font></b></p><ul><li>float(float)</li></ul><p><b><font SIZE=3>__builtin_fcfid</font></b></p><ul><li>double(double)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">fcfid	FRT,FRA	-- 64-bit floating-point convert</font></p></ul><p><b><font SIZE=3>__builtin_fctid</font></b></p><ul><li>double(double)</li></ul><p><b><font SIZE=3>__builtin_fctidz</font></b></p><ul><li>double(double)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">fctidz	FRT,FRA	-- 64-bit floating-point truncate to long int</font></p></ul><p><b><font SIZE=3>__builtin_fctiw</font></b></p><ul><li>double(double)</li></ul><p><b><font SIZE=3>__builtin_fctiwz</font></b></p><ul><li>double(double)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">fctiwz	FRT,FRA	-- 64-bit floating-point truncate to int word</font></p></ul><p><b><font SIZE=3>__builtin_fence</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">generate preffered no-operation opcode</font></p></ul><p><b><font SIZE=3>__builtin_fmadd</font></b></p><ul><li>double(double, double, double)</li></ul><p><b><font SIZE=3>__builtin_fmadds</font></b></p><ul><li>float(float, float, float)</li></ul><p><b><font SIZE=3>__builtin_fmsub</font></b></p><ul><li>double(double, double, double)</li></ul><p><b><font SIZE=3>__builtin_fmsubs</font></b></p><ul><li>float(float, float, float)</li></ul><p><b><font SIZE=3>__builtin_fnabs</font></b></p><ul><li>double(double)</li></ul><p><b><font SIZE=3>__builtin_fnabsf</font></b></p><ul><li>float(float)</li></ul><p><b><font SIZE=3>__builtin_fnmadd</font></b></p><ul><li>double(double, double, double)</li></ul><p><b><font SIZE=3>__builtin_fnmadds</font></b></p><ul><li>float(float, float, float)</li></ul><p><b><font SIZE=3>__builtin_fnmsub</font></b></p><ul><li>double(double, double, double)</li></ul><p><b><font SIZE=3>__builtin_fnmsubs</font></b></p><ul><li>float(float, float, float)</li></ul><p><b><font SIZE=3>__builtin_frame_address</font></b></p><ul><li>void_ptr(rargs)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">get nth frame address</font></p></ul><p><b><font SIZE=3>__builtin_fre</font></b></p><ul><li>double(double)</li></ul><p><b><font SIZE=3>__builtin_frsqrte</font></b></p><ul><li>double(double)</li></ul><p><b><font SIZE=3>__builtin_frsqrtes</font></b></p><ul><li>float(float)</li></ul><p><b><font SIZE=3>__builtin_fsel</font></b></p><ul><li>double(double, double, double)</li></ul><p><b><font SIZE=3>__builtin_fsels</font></b></p><ul><li>float(float, float, float)</li></ul><p><b><font SIZE=3>__builtin_fsqrt</font></b></p><ul><li>double(double)</li></ul><p><b><font SIZE=3>__builtin_fsqrts</font></b></p><ul><li>float(float)</li></ul><p><b><font SIZE=3>__builtin_get_toc</font></b></p><ul><li>long()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">returns the current value of the TOC register (r2)</font></p></ul><p><b><font SIZE=3>__builtin_icbi</font></b></p><ul><li>volatile_void(void_ptr, int64)</li></ul><p><b><font SIZE=3>__builtin_isync</font></b></p><ul><li>volatile_void()</li></ul><p><b><font SIZE=3>__builtin_ldarx</font></b></p><ul><li>int64(volatile_void_ptr, int64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">load double and set reservation. When followed by stdcx, load/store pair is thread safe. This is a very high latency instruction.</font></p></ul><p><b><font SIZE=3>__builtin_ldbrx</font></b></p><ul><li>uint64(const_void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_lhbrx</font></b></p><ul><li>unsigned_int(const_void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_lwarx</font></b></p><ul><li>unsigned_int(volatile_void_ptr, int64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">load word and set reservation. When followed by stwcx, load/store pair is thread safe. This is a very high latency instruction.</font></p></ul><p><b><font SIZE=3>__builtin_lwbrx</font></b></p><ul><li>unsigned_int(const_void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_lwsync</font></b></p><ul><li>volatile_void()</li></ul><p><b><font SIZE=3>__builtin_mb</font></b></p><ul><li>volatile_void()</li></ul><p><b><font SIZE=3>__builtin_mffs</font></b></p><ul><li>volatile_double()</li></ul><p><b><font SIZE=3>__builtin_mftb</font></b></p><ul><li>uint64()</li></ul><p><b><font SIZE=3>__builtin_mtfsb0</font></b></p><ul><li>void(immed_u16)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">__builtin_mtfsb0( unsigned bit ) zero bit of floating point status register</font></p></ul><p><b><font SIZE=3>__builtin_mtfsb1</font></b></p><ul><li>void(immed_u16)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">__builtin_mtfsb1( unsigned bit ) set bit of floating point status register</font></p></ul><p><b><font SIZE=3>__builtin_mtfsf</font></b></p><ul><li>void(immed_u16, double)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">__builtin_mtfsf( unsigned mask, double value ) move value to floating point status register</font></p></ul><p><b><font SIZE=3>__builtin_mtfsfi</font></b></p><ul><li>void(immed_u16, immed_u16)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">__builtin_mtfsfi( unsigned mask, unsigned value ) </font></p></ul><p><b><font SIZE=3>__builtin_mulhd</font></b></p><ul><li>int64(int64, int64)</li></ul><p><b><font SIZE=3>__builtin_mulhdu</font></b></p><ul><li>int64(int64, int64)</li></ul><p><b><font SIZE=3>__builtin_mulhw</font></b></p><ul><li>int64(int64, int64)</li></ul><p><b><font SIZE=3>__builtin_mulhwu</font></b></p><ul><li>int64(int64, int64)</li></ul><p><b><font SIZE=3>__builtin_raw_mftb</font></b></p><ul><li>unsigned_int()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">mftb instruction on its own, without loop-back. 32 bit result only.</font></p></ul><p><b><font SIZE=3>__builtin_return_address</font></b></p><ul><li>void_ptr()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">get return address</font></p></ul><p><b><font SIZE=3>__builtin_setflm</font></b></p><ul><li>double(double)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">__builtin_setflm( double value ) replace floating point status register and return previous value</font></p></ul><p><b><font SIZE=3>__builtin_snpause</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Breakpoint that can be single stepped over</font></p></ul><p><b><font SIZE=3>__builtin_stdbrx</font></b></p><ul><li>void(uint64, void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_stdcx</font></b></p><ul><li>int(uint64, volatile_void_ptr, int64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">store double word only if reservation has been set by ldarx. Used for atomic variable access. Returns true if sucessful. This is a very high latency instruction.</font></p></ul><p><b><font SIZE=3>__builtin_stfiwx</font></b></p><ul><li>void(double, void_ptr, int)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">store lower 32 bits of fpu reg. Used after fctiw/fctiwz</font></p></ul><p><b><font SIZE=3>__builtin_sthbrx</font></b></p><ul><li>void(unsigned_short, void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_stop</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Breakpoint that can't be stepped over</font></p></ul><p><b><font SIZE=3>__builtin_stwbrx</font></b></p><ul><li>void(unsigned_int, void_ptr, int)</li></ul><p><b><font SIZE=3>__builtin_stwcx</font></b></p><ul><li>int(unsigned_int, volatile_void_ptr, int64)</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">store word only if reservation has been set by lwarx. Used for atomic variable access. Returns true if sucessful. This is a very high latency instruction.</font></p></ul><p><b><font SIZE=3>__builtin_sync</font></b></p><ul><li>volatile_void()</li></ul><p><b><font SIZE=3>__builtin_trap</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Breakpoint that can't be single stepped over (gcc compatibility)</font></p></ul><p><b><font SIZE=3>__cctph</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Change current thread priority to high</font></p></ul><p><b><font SIZE=3>__cctpl</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Change current thread priority to low</font></p></ul><p><b><font SIZE=3>__cctpm</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Change current thread priority to medium</font></p></ul><p><b><font SIZE=3>__cntlzd</font></b></p><ul><li>uint64(uint64)</li></ul><p><b><font SIZE=3>__cntlzw</font></b></p><ul><li>uint64(uint64)</li></ul><p><b><font SIZE=3>__db10cyc</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Cause the current thread to block at dispatch for ten cycles</font></p></ul><p><b><font SIZE=3>__db12cyc</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Cause the current thread to block at dispatch for twelve cycles</font></p></ul><p><b><font SIZE=3>__db16cyc</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Cause the current thread to block at dispatch for sixteen cycles</font></p></ul><p><b><font SIZE=3>__db8cyc</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">Cause the current thread to block at dispatch for eight cycles</font></p></ul><p><b><font SIZE=3>__dcbt</font></b></p><ul><li>volatile_void(const_void_ptr)</li></ul><p><b><font SIZE=3>__fabs</font></b></p><ul><li>double(double)</li></ul><p><b><font SIZE=3>__fabsf</font></b></p><ul><li>float(float)</li></ul><p><b><font SIZE=3>__fsel</font></b></p><ul><li>double(double, double, double)</li></ul><p><b><font SIZE=3>__fsqrts</font></b></p><ul><li>float(float)</li></ul><p><b><font SIZE=3>__mfspr</font></b></p><ul><li>uint64(int)</li></ul><p><b><font SIZE=3>__mftb</font></b></p><ul><li>uint64()</li></ul><p><b><font SIZE=3>__nop</font></b></p><ul><li>volatile_void()</li></ul><ul><p><font FACE="Verdana" SIZE="2" COLOR="#2020c0">generate preffered no-operation opcode</font></p></ul><p><b><font SIZE=3>vec_abs</font></b></p><ul><li>vec_f32(vec_f32)</li><li>vec_s16(vec_s16)</li><li>vec_s32(vec_s32)</li><li>vec_s8(vec_s8)</li></ul><p><b><font SIZE=3>vec_abss</font></b></p><ul><li>vec_s16(vec_s16)</li><li>vec_s32(vec_s32)</li><li>vec_s8(vec_s8)</li></ul><p><b><font SIZE=3>vec_add</font></b></p><ul><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_addc</font></b></p><ul><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_adds</font></b></p><ul><li>vec_s8(vec_b8, vec_s8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_all_eq</font></b></p><ul><li>cc24t(vec_b16, vec_b16)</li><li>cc24t(vec_b16, vec_s16)</li><li>cc24t(vec_b16, vec_u16)</li><li>cc24t(vec_b32, vec_b32)</li><li>cc24t(vec_b32, vec_s32)</li><li>cc24t(vec_b32, vec_u32)</li><li>cc24t(vec_b8, vec_b8)</li><li>cc24t(vec_b8, vec_s8)</li><li>cc24t(vec_b8, vec_u8)</li><li>cc24t(vec_f32, vec_f32)</li><li>cc24t(vec_p16, vec_p16)</li><li>cc24t(vec_s16, vec_b16)</li><li>cc24t(vec_s16, vec_s16)</li><li>cc24t(vec_s32, vec_b32)</li><li>cc24t(vec_s32, vec_s32)</li><li>cc24t(vec_s8, vec_b8)</li><li>cc24t(vec_s8, vec_s8)</li><li>cc24t(vec_u16, vec_b16)</li><li>cc24t(vec_u16, vec_u16)</li><li>cc24t(vec_u32, vec_b32)</li><li>cc24t(vec_u32, vec_u32)</li><li>cc24t(vec_u8, vec_b8)</li><li>cc24t(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_all_ge</font></b></p><ul><li>cc26tr(vec_b16, vec_s16)</li><li>cc26tr(vec_b16, vec_u16)</li><li>cc26tr(vec_b32, vec_s32)</li><li>cc26tr(vec_b32, vec_u32)</li><li>cc26tr(vec_b8, vec_s8)</li><li>cc26tr(vec_b8, vec_u8)</li><li>cc24t(vec_f32, vec_f32)</li><li>cc26tr(vec_s16, vec_b16)</li><li>cc26tr(vec_s16, vec_s16)</li><li>cc26tr(vec_s32, vec_b32)</li><li>cc26tr(vec_s32, vec_s32)</li><li>cc26tr(vec_s8, vec_b8)</li><li>cc26tr(vec_s8, vec_s8)</li><li>cc26tr(vec_u16, vec_b16)</li><li>cc26tr(vec_u16, vec_u16)</li><li>cc26tr(vec_u32, vec_b32)</li><li>cc26tr(vec_u32, vec_u32)</li><li>cc26tr(vec_u8, vec_b8)</li><li>cc26tr(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_all_gt</font></b></p><ul><li>cc24t(vec_b16, vec_s16)</li><li>cc24t(vec_b16, vec_u16)</li><li>cc24t(vec_b32, vec_s32)</li><li>cc24t(vec_b32, vec_u32)</li><li>cc24t(vec_b8, vec_s8)</li><li>cc24t(vec_b8, vec_u8)</li><li>cc24t(vec_f32, vec_f32)</li><li>cc24t(vec_s16, vec_b16)</li><li>cc24t(vec_s16, vec_s16)</li><li>cc24t(vec_s32, vec_b32)</li><li>cc24t(vec_s32, vec_s32)</li><li>cc24t(vec_s8, vec_b8)</li><li>cc24t(vec_s8, vec_s8)</li><li>cc24t(vec_u16, vec_b16)</li><li>cc24t(vec_u16, vec_u16)</li><li>cc24t(vec_u32, vec_b32)</li><li>cc24t(vec_u32, vec_u32)</li><li>cc24t(vec_u8, vec_b8)</li><li>cc24t(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_all_in</font></b></p><ul><li>cc26t(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_all_le</font></b></p><ul><li>cc26t(vec_b16, vec_s16)</li><li>cc26t(vec_b16, vec_u16)</li><li>cc26t(vec_b32, vec_s32)</li><li>cc26t(vec_b32, vec_u32)</li><li>cc26t(vec_b8, vec_s8)</li><li>cc26t(vec_b8, vec_u8)</li><li>cc24tr(vec_f32, vec_f32)</li><li>cc26t(vec_s16, vec_b16)</li><li>cc26t(vec_s16, vec_s16)</li><li>cc26t(vec_s32, vec_b32)</li><li>cc26t(vec_s32, vec_s32)</li><li>cc26t(vec_s8, vec_b8)</li><li>cc26t(vec_s8, vec_s8)</li><li>cc26t(vec_u16, vec_b16)</li><li>cc26t(vec_u16, vec_u16)</li><li>cc26t(vec_u32, vec_b32)</li><li>cc26t(vec_u32, vec_u32)</li><li>cc26t(vec_u8, vec_b8)</li><li>cc26t(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_all_lt</font></b></p><ul><li>cc24tr(vec_b16, vec_s16)</li><li>cc24tr(vec_b16, vec_u16)</li><li>cc24tr(vec_b32, vec_s32)</li><li>cc24tr(vec_b32, vec_u32)</li><li>cc24tr(vec_b8, vec_s8)</li><li>cc24tr(vec_b8, vec_u8)</li><li>cc24tr(vec_f32, vec_f32)</li><li>cc24tr(vec_s16, vec_b16)</li><li>cc24tr(vec_s16, vec_s16)</li><li>cc24tr(vec_s32, vec_b32)</li><li>cc24tr(vec_s32, vec_s32)</li><li>cc24tr(vec_s8, vec_b8)</li><li>cc24tr(vec_s8, vec_s8)</li><li>cc24tr(vec_u16, vec_b16)</li><li>cc24tr(vec_u16, vec_u16)</li><li>cc24tr(vec_u32, vec_b32)</li><li>cc24tr(vec_u32, vec_u32)</li><li>cc24tr(vec_u8, vec_b8)</li><li>cc24tr(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_all_nan</font></b></p><ul><li>cc26td(vec_f32)</li></ul><p><b><font SIZE=3>vec_all_ne</font></b></p><ul><li>cc26t(vec_b16, vec_b16)</li><li>cc26t(vec_b16, vec_s16)</li><li>cc26t(vec_b16, vec_u16)</li><li>cc26t(vec_b32, vec_b32)</li><li>cc26t(vec_b32, vec_s32)</li><li>cc26t(vec_b32, vec_u32)</li><li>cc26t(vec_b8, vec_b8)</li><li>cc26t(vec_b8, vec_s8)</li><li>cc26t(vec_b8, vec_u8)</li><li>cc26t(vec_f32, vec_f32)</li><li>cc26t(vec_p16, vec_p16)</li><li>cc26t(vec_s16, vec_b16)</li><li>cc26t(vec_s16, vec_s16)</li><li>cc26t(vec_s32, vec_b32)</li><li>cc26t(vec_s32, vec_s32)</li><li>cc26t(vec_s8, vec_b8)</li><li>cc26t(vec_s8, vec_s8)</li><li>cc26t(vec_u16, vec_b16)</li><li>cc26t(vec_u16, vec_u16)</li><li>cc26t(vec_u32, vec_b32)</li><li>cc26t(vec_u32, vec_u32)</li><li>cc26t(vec_u8, vec_b8)</li><li>cc26t(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_all_nge</font></b></p><ul><li>cc26t(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_all_ngt</font></b></p><ul><li>cc26t(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_all_nle</font></b></p><ul><li>cc26tr(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_all_nlt</font></b></p><ul><li>cc26tr(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_all_numeric</font></b></p><ul><li>cc24td(vec_f32)</li></ul><p><b><font SIZE=3>vec_and</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_b32, vec_f32)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_andc</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_b32, vec_f32)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_any_eq</font></b></p><ul><li>cc26f(vec_b16, vec_b16)</li><li>cc26f(vec_b16, vec_s16)</li><li>cc26f(vec_b16, vec_u16)</li><li>cc26f(vec_b32, vec_b32)</li><li>cc26f(vec_b32, vec_s32)</li><li>cc26f(vec_b32, vec_u32)</li><li>cc26f(vec_b8, vec_b8)</li><li>cc26f(vec_b8, vec_s8)</li><li>cc26f(vec_b8, vec_u8)</li><li>cc26f(vec_f32, vec_f32)</li><li>cc26f(vec_p16, vec_p16)</li><li>cc26f(vec_s16, vec_b16)</li><li>cc26f(vec_s16, vec_s16)</li><li>cc26f(vec_s32, vec_b32)</li><li>cc26f(vec_s32, vec_s32)</li><li>cc26f(vec_s8, vec_b8)</li><li>cc26f(vec_s8, vec_s8)</li><li>cc26f(vec_u16, vec_b16)</li><li>cc26f(vec_u16, vec_u16)</li><li>cc26f(vec_u32, vec_b32)</li><li>cc26f(vec_u32, vec_u32)</li><li>cc26f(vec_u8, vec_b8)</li><li>cc26f(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_any_ge</font></b></p><ul><li>cc24fr(vec_b16, vec_s16)</li><li>cc24fr(vec_b16, vec_u16)</li><li>cc24fr(vec_b32, vec_s32)</li><li>cc24fr(vec_b32, vec_u32)</li><li>cc24fr(vec_b8, vec_s8)</li><li>cc24fr(vec_b8, vec_u8)</li><li>cc26f(vec_f32, vec_f32)</li><li>cc24fr(vec_s16, vec_b16)</li><li>cc24fr(vec_s16, vec_s16)</li><li>cc24fr(vec_s32, vec_b32)</li><li>cc24fr(vec_s32, vec_s32)</li><li>cc24fr(vec_s8, vec_b8)</li><li>cc24fr(vec_s8, vec_s8)</li><li>cc24fr(vec_u16, vec_b16)</li><li>cc24fr(vec_u16, vec_u16)</li><li>cc24fr(vec_u32, vec_b32)</li><li>cc24fr(vec_u32, vec_u32)</li><li>cc24fr(vec_u8, vec_b8)</li><li>cc24fr(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_any_gt</font></b></p><ul><li>cc26f(vec_b16, vec_s16)</li><li>cc26f(vec_b16, vec_u16)</li><li>cc26f(vec_b32, vec_s32)</li><li>cc26f(vec_b32, vec_u32)</li><li>cc26f(vec_b8, vec_s8)</li><li>cc26f(vec_b8, vec_u8)</li><li>cc26f(vec_f32, vec_f32)</li><li>cc26f(vec_s16, vec_b16)</li><li>cc26f(vec_s16, vec_s16)</li><li>cc26f(vec_s32, vec_b32)</li><li>cc26f(vec_s32, vec_s32)</li><li>cc26f(vec_s8, vec_b8)</li><li>cc26f(vec_s8, vec_s8)</li><li>cc26f(vec_u16, vec_b16)</li><li>cc26f(vec_u16, vec_u16)</li><li>cc26f(vec_u32, vec_b32)</li><li>cc26f(vec_u32, vec_u32)</li><li>cc26f(vec_u8, vec_b8)</li><li>cc26f(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_any_le</font></b></p><ul><li>cc24f(vec_b16, vec_s16)</li><li>cc24f(vec_b16, vec_u16)</li><li>cc24f(vec_b32, vec_s32)</li><li>cc24f(vec_b32, vec_u32)</li><li>cc24f(vec_b8, vec_s8)</li><li>cc24f(vec_b8, vec_u8)</li><li>cc26fr(vec_f32, vec_f32)</li><li>cc24f(vec_s16, vec_b16)</li><li>cc24f(vec_s16, vec_s16)</li><li>cc24f(vec_s32, vec_b32)</li><li>cc24f(vec_s32, vec_s32)</li><li>cc24f(vec_s8, vec_b8)</li><li>cc24f(vec_s8, vec_s8)</li><li>cc24f(vec_u16, vec_b16)</li><li>cc24f(vec_u16, vec_u16)</li><li>cc24f(vec_u32, vec_b32)</li><li>cc24f(vec_u32, vec_u32)</li><li>cc24f(vec_u8, vec_b8)</li><li>cc24f(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_any_lt</font></b></p><ul><li>cc26fr(vec_b16, vec_s16)</li><li>cc26fr(vec_b16, vec_u16)</li><li>cc26fr(vec_b32, vec_s32)</li><li>cc26fr(vec_b32, vec_u32)</li><li>cc26fr(vec_b8, vec_s8)</li><li>cc26fr(vec_b8, vec_u8)</li><li>cc26fr(vec_f32, vec_f32)</li><li>cc26fr(vec_s16, vec_b16)</li><li>cc26fr(vec_s16, vec_s16)</li><li>cc26fr(vec_s32, vec_b32)</li><li>cc26fr(vec_s32, vec_s32)</li><li>cc26fr(vec_s8, vec_b8)</li><li>cc26fr(vec_s8, vec_s8)</li><li>cc26fr(vec_u16, vec_b16)</li><li>cc26fr(vec_u16, vec_u16)</li><li>cc26fr(vec_u32, vec_b32)</li><li>cc26fr(vec_u32, vec_u32)</li><li>cc26fr(vec_u8, vec_b8)</li><li>cc26fr(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_any_nan</font></b></p><ul><li>cc24fd(vec_f32)</li></ul><p><b><font SIZE=3>vec_any_ne</font></b></p><ul><li>cc24f(vec_b16, vec_b16)</li><li>cc24f(vec_b16, vec_s16)</li><li>cc24f(vec_b16, vec_u16)</li><li>cc24f(vec_b32, vec_b32)</li><li>cc24f(vec_b32, vec_s32)</li><li>cc24f(vec_b32, vec_u32)</li><li>cc24f(vec_b8, vec_b8)</li><li>cc24f(vec_b8, vec_s8)</li><li>cc24f(vec_b8, vec_u8)</li><li>cc24f(vec_f32, vec_f32)</li><li>cc24f(vec_p16, vec_p16)</li><li>cc24f(vec_s16, vec_b16)</li><li>cc24f(vec_s16, vec_s16)</li><li>cc24f(vec_s32, vec_b32)</li><li>cc24f(vec_s32, vec_s32)</li><li>cc24f(vec_s8, vec_b8)</li><li>cc24f(vec_s8, vec_s8)</li><li>cc24f(vec_u16, vec_b16)</li><li>cc24f(vec_u16, vec_u16)</li><li>cc24f(vec_u32, vec_b32)</li><li>cc24f(vec_u32, vec_u32)</li><li>cc24f(vec_u8, vec_b8)</li><li>cc24f(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_any_nge</font></b></p><ul><li>cc24f(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_any_ngt</font></b></p><ul><li>cc24f(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_any_nle</font></b></p><ul><li>cc24fr(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_any_nlt</font></b></p><ul><li>cc24fr(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_any_numeric</font></b></p><ul><li>cc26fd(vec_f32)</li></ul><p><b><font SIZE=3>vec_any_out</font></b></p><ul><li>cc26f(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_avg</font></b></p><ul><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_ceil</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_cmpb</font></b></p><ul><li>vec_s32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_cmpeq</font></b></p><ul><li>vec_b32(vec_f32, vec_f32)</li><li>vec_b8(vec_s8, vec_s8)</li><li>vec_b8(vec_u8, vec_u8)</li><li>vec_b16(vec_s16, vec_s16)</li><li>vec_b16(vec_u16, vec_u16)</li><li>vec_b32(vec_s32, vec_s32)</li><li>vec_b32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_cmpge</font></b></p><ul><li>vec_b32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_cmpgt</font></b></p><ul><li>vec_b32(vec_f32, vec_f32)</li><li>vec_b8(vec_s8, vec_s8)</li><li>vec_b16(vec_s16, vec_s16)</li><li>vec_b32(vec_s32, vec_s32)</li><li>vec_b8(vec_u8, vec_u8)</li><li>vec_b16(vec_u16, vec_u16)</li><li>vec_b32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_cmple</font></b></p><ul><li>vec_b32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_cmplt</font></b></p><ul><li>vec_b32(vec_f32, vec_f32)</li><li>vec_b16(vec_s16, vec_s16)</li><li>vec_b32(vec_s32, vec_s32)</li><li>vec_b8(vec_s8, vec_s8)</li><li>vec_b16(vec_u16, vec_u16)</li><li>vec_b32(vec_u32, vec_u32)</li><li>vec_b8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_ctf</font></b></p><ul><li>vec_f32(vec_s32, immed_u5)</li><li>vec_f32(vec_u32, immed_u5)</li></ul><p><b><font SIZE=3>vec_cts</font></b></p><ul><li>vec_s32(vec_f32, immed_u5)</li></ul><p><b><font SIZE=3>vec_ctu</font></b></p><ul><li>vec_u32(vec_f32, immed_u5)</li></ul><p><b><font SIZE=3>vec_dss</font></b></p><ul><li>volatile_void(immed_u2)</li></ul><p><b><font SIZE=3>vec_dssall</font></b></p><ul><li>volatile_void()</li></ul><p><b><font SIZE=3>vec_dst</font></b></p><ul><li>volatile_void(float_ptr, int, immed_u2)</li><li>volatile_void(int_ptr, int, immed_u2)</li><li>volatile_void(long_ptr, int, immed_u2)</li><li>volatile_void(short_ptr, int, immed_u2)</li><li>volatile_void(signed_char_ptr, int, immed_u2)</li><li>volatile_void(unsigned_char_ptr, int, immed_u2)</li><li>volatile_void(unsigned_int_ptr, int, immed_u2)</li><li>volatile_void(unsigned_long_ptr, int, immed_u2)</li><li>volatile_void(unsigned_short_ptr, int, immed_u2)</li><li>volatile_void(vec_b16_ptr, int, immed_u2)</li><li>volatile_void(vec_b32_ptr, int, immed_u2)</li><li>volatile_void(vec_b8_ptr, int, immed_u2)</li><li>volatile_void(vec_f32_ptr, int, immed_u2)</li><li>volatile_void(vec_p16_ptr, int, immed_u2)</li><li>volatile_void(vec_s16_ptr, int, immed_u2)</li><li>volatile_void(vec_s32_ptr, int, immed_u2)</li><li>volatile_void(vec_s8_ptr, int, immed_u2)</li><li>volatile_void(vec_u16_ptr, int, immed_u2)</li><li>volatile_void(vec_u32_ptr, int, immed_u2)</li><li>volatile_void(vec_u8_ptr, int, immed_u2)</li></ul><p><b><font SIZE=3>vec_dstst</font></b></p><ul><li>volatile_void(float_ptr, int, immed_u2)</li><li>volatile_void(int_ptr, int, immed_u2)</li><li>volatile_void(long_ptr, int, immed_u2)</li><li>volatile_void(short_ptr, int, immed_u2)</li><li>volatile_void(signed_char_ptr, int, immed_u2)</li><li>volatile_void(unsigned_char_ptr, int, immed_u2)</li><li>volatile_void(unsigned_int_ptr, int, immed_u2)</li><li>volatile_void(unsigned_long_ptr, int, immed_u2)</li><li>volatile_void(unsigned_short_ptr, int, immed_u2)</li><li>volatile_void(vec_b16_ptr, int, immed_u2)</li><li>volatile_void(vec_b32_ptr, int, immed_u2)</li><li>volatile_void(vec_b8_ptr, int, immed_u2)</li><li>volatile_void(vec_f32_ptr, int, immed_u2)</li><li>volatile_void(vec_p16_ptr, int, immed_u2)</li><li>volatile_void(vec_s16_ptr, int, immed_u2)</li><li>volatile_void(vec_s32_ptr, int, immed_u2)</li><li>volatile_void(vec_s8_ptr, int, immed_u2)</li><li>volatile_void(vec_u16_ptr, int, immed_u2)</li><li>volatile_void(vec_u32_ptr, int, immed_u2)</li><li>volatile_void(vec_u8_ptr, int, immed_u2)</li></ul><p><b><font SIZE=3>vec_dststt</font></b></p><ul><li>volatile_void(float_ptr, int, immed_u2)</li><li>volatile_void(int_ptr, int, immed_u2)</li><li>volatile_void(long_ptr, int, immed_u2)</li><li>volatile_void(short_ptr, int, immed_u2)</li><li>volatile_void(signed_char_ptr, int, immed_u2)</li><li>volatile_void(unsigned_char_ptr, int, immed_u2)</li><li>volatile_void(unsigned_int_ptr, int, immed_u2)</li><li>volatile_void(unsigned_long_ptr, int, immed_u2)</li><li>volatile_void(unsigned_short_ptr, int, immed_u2)</li><li>volatile_void(vec_b16_ptr, int, immed_u2)</li><li>volatile_void(vec_b32_ptr, int, immed_u2)</li><li>volatile_void(vec_b8_ptr, int, immed_u2)</li><li>volatile_void(vec_f32_ptr, int, immed_u2)</li><li>volatile_void(vec_p16_ptr, int, immed_u2)</li><li>volatile_void(vec_s16_ptr, int, immed_u2)</li><li>volatile_void(vec_s32_ptr, int, immed_u2)</li><li>volatile_void(vec_s8_ptr, int, immed_u2)</li><li>volatile_void(vec_u16_ptr, int, immed_u2)</li><li>volatile_void(vec_u32_ptr, int, immed_u2)</li><li>volatile_void(vec_u8_ptr, int, immed_u2)</li></ul><p><b><font SIZE=3>vec_dstt</font></b></p><ul><li>volatile_void(float_ptr, int, immed_u2)</li><li>volatile_void(int_ptr, int, immed_u2)</li><li>volatile_void(long_ptr, int, immed_u2)</li><li>volatile_void(short_ptr, int, immed_u2)</li><li>volatile_void(signed_char_ptr, int, immed_u2)</li><li>volatile_void(unsigned_char_ptr, int, immed_u2)</li><li>volatile_void(unsigned_int_ptr, int, immed_u2)</li><li>volatile_void(unsigned_long_ptr, int, immed_u2)</li><li>volatile_void(unsigned_short_ptr, int, immed_u2)</li><li>volatile_void(vec_b16_ptr, int, immed_u2)</li><li>volatile_void(vec_b32_ptr, int, immed_u2)</li><li>volatile_void(vec_b8_ptr, int, immed_u2)</li><li>volatile_void(vec_f32_ptr, int, immed_u2)</li><li>volatile_void(vec_p16_ptr, int, immed_u2)</li><li>volatile_void(vec_s16_ptr, int, immed_u2)</li><li>volatile_void(vec_s32_ptr, int, immed_u2)</li><li>volatile_void(vec_s8_ptr, int, immed_u2)</li><li>volatile_void(vec_u16_ptr, int, immed_u2)</li><li>volatile_void(vec_u32_ptr, int, immed_u2)</li><li>volatile_void(vec_u8_ptr, int, immed_u2)</li></ul><p><b><font SIZE=3>vec_expte</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_extract</font></b></p><ul><li>float(vec_f32, unsigned_int)</li><li>short(vec_s16, unsigned_int)</li><li>int(vec_s32, unsigned_int)</li><li>signed_char(vec_s8, unsigned_int)</li><li>unsigned_short(vec_u16, unsigned_int)</li><li>unsigned_int(vec_u32, unsigned_int)</li><li>unsigned_char(vec_u8, unsigned_int)</li></ul><p><b><font SIZE=3>vec_floor</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_insert</font></b></p><ul><li>vec_f32(float, vec_f32, unsigned_int)</li><li>vec_s16(short, vec_s16, unsigned_int)</li><li>vec_s32(int, vec_s32, unsigned_int)</li><li>vec_s8(signed_char, vec_s8, unsigned_int)</li><li>vec_u16(unsigned_short, vec_u16, unsigned_int)</li><li>vec_u32(unsigned_int, vec_u32, unsigned_int)</li><li>vec_u8(unsigned_char, vec_u8, unsigned_int)</li></ul><p><b><font SIZE=3>vec_ld</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_b16(int, vec_b16_ptr)</li><li>vec_b32(int, vec_b32_ptr)</li><li>vec_b8(int, vec_b8_ptr)</li><li>vec_f32(int, vec_f32_ptr)</li><li>vec_p16(int, vec_p16_ptr)</li><li>vec_s16(int, vec_s16_ptr)</li><li>vec_s32(int, vec_s32_ptr)</li><li>vec_s8(int, vec_s8_ptr)</li><li>vec_u16(int, vec_u16_ptr)</li><li>vec_u32(int, vec_u32_ptr)</li><li>vec_u8(int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_lde</font></b></p><ul><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li></ul><p><b><font SIZE=3>vec_ldl</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_b16(int, vec_b16_ptr)</li><li>vec_b32(int, vec_b32_ptr)</li><li>vec_b8(int, vec_b8_ptr)</li><li>vec_f32(int, vec_f32_ptr)</li><li>vec_p16(int, vec_p16_ptr)</li><li>vec_s16(int, vec_s16_ptr)</li><li>vec_s32(int, vec_s32_ptr)</li><li>vec_s8(int, vec_s8_ptr)</li><li>vec_u16(int, vec_u16_ptr)</li><li>vec_u32(int, vec_u32_ptr)</li><li>vec_u8(int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_loge</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_lvebx</font></b></p><ul><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li></ul><p><b><font SIZE=3>vec_lvehx</font></b></p><ul><li>vec_s16(int, short_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li></ul><p><b><font SIZE=3>vec_lvewx</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li></ul><p><b><font SIZE=3>vec_lvlx</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_b16(int, vec_b16_ptr)</li><li>vec_b32(int, vec_b32_ptr)</li><li>vec_b8(int, vec_b8_ptr)</li><li>vec_f32(int, vec_f32_ptr)</li><li>vec_p16(int, vec_p16_ptr)</li><li>vec_s16(int, vec_s16_ptr)</li><li>vec_s32(int, vec_s32_ptr)</li><li>vec_s8(int, vec_s8_ptr)</li><li>vec_u16(int, vec_u16_ptr)</li><li>vec_u32(int, vec_u32_ptr)</li><li>vec_u8(int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_lvlxl</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_b16(int, vec_b16_ptr)</li><li>vec_b32(int, vec_b32_ptr)</li><li>vec_b8(int, vec_b8_ptr)</li><li>vec_f32(int, vec_f32_ptr)</li><li>vec_p16(int, vec_p16_ptr)</li><li>vec_s16(int, vec_s16_ptr)</li><li>vec_s32(int, vec_s32_ptr)</li><li>vec_s8(int, vec_s8_ptr)</li><li>vec_u16(int, vec_u16_ptr)</li><li>vec_u32(int, vec_u32_ptr)</li><li>vec_u8(int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_lvrx</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_b16(int, vec_b16_ptr)</li><li>vec_b32(int, vec_b32_ptr)</li><li>vec_b8(int, vec_b8_ptr)</li><li>vec_f32(int, vec_f32_ptr)</li><li>vec_p16(int, vec_p16_ptr)</li><li>vec_s16(int, vec_s16_ptr)</li><li>vec_s32(int, vec_s32_ptr)</li><li>vec_s8(int, vec_s8_ptr)</li><li>vec_u16(int, vec_u16_ptr)</li><li>vec_u32(int, vec_u32_ptr)</li><li>vec_u8(int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_lvrxl</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_b16(int, vec_b16_ptr)</li><li>vec_b32(int, vec_b32_ptr)</li><li>vec_b8(int, vec_b8_ptr)</li><li>vec_f32(int, vec_f32_ptr)</li><li>vec_p16(int, vec_p16_ptr)</li><li>vec_s16(int, vec_s16_ptr)</li><li>vec_s32(int, vec_s32_ptr)</li><li>vec_s8(int, vec_s8_ptr)</li><li>vec_u16(int, vec_u16_ptr)</li><li>vec_u32(int, vec_u32_ptr)</li><li>vec_u8(int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_lvsl</font></b></p><ul><li>vec_u8(int, float_ptr)</li><li>vec_u8(int, int_ptr)</li><li>vec_u8(int, long_ptr)</li><li>vec_u8(int, short_ptr)</li><li>vec_u8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u8(int, unsigned_int_ptr)</li><li>vec_u8(int, unsigned_long_ptr)</li><li>vec_u8(int, unsigned_short_ptr)</li></ul><p><b><font SIZE=3>vec_lvsr</font></b></p><ul><li>vec_u8(int, float_ptr)</li><li>vec_u8(int, int_ptr)</li><li>vec_u8(int, long_ptr)</li><li>vec_u8(int, short_ptr)</li><li>vec_u8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u8(int, unsigned_int_ptr)</li><li>vec_u8(int, unsigned_long_ptr)</li><li>vec_u8(int, unsigned_short_ptr)</li></ul><p><b><font SIZE=3>vec_lvx</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_b16(int, vec_b16_ptr)</li><li>vec_b32(int, vec_b32_ptr)</li><li>vec_b8(int, vec_b8_ptr)</li><li>vec_f32(int, vec_f32_ptr)</li><li>vec_p16(int, vec_p16_ptr)</li><li>vec_s16(int, vec_s16_ptr)</li><li>vec_s32(int, vec_s32_ptr)</li><li>vec_s8(int, vec_s8_ptr)</li><li>vec_u16(int, vec_u16_ptr)</li><li>vec_u32(int, vec_u32_ptr)</li><li>vec_u8(int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_lvxl</font></b></p><ul><li>vec_f32(int, float_ptr)</li><li>vec_s32(int, int_ptr)</li><li>vec_s32(int, long_ptr)</li><li>vec_s16(int, short_ptr)</li><li>vec_s8(int, signed_char_ptr)</li><li>vec_u8(int, unsigned_char_ptr)</li><li>vec_u32(int, unsigned_int_ptr)</li><li>vec_u32(int, unsigned_long_ptr)</li><li>vec_u16(int, unsigned_short_ptr)</li><li>vec_b16(int, vec_b16_ptr)</li><li>vec_b32(int, vec_b32_ptr)</li><li>vec_b8(int, vec_b8_ptr)</li><li>vec_f32(int, vec_f32_ptr)</li><li>vec_p16(int, vec_p16_ptr)</li><li>vec_s16(int, vec_s16_ptr)</li><li>vec_s32(int, vec_s32_ptr)</li><li>vec_s8(int, vec_s8_ptr)</li><li>vec_u16(int, vec_u16_ptr)</li><li>vec_u32(int, vec_u32_ptr)</li><li>vec_u8(int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_madd</font></b></p><ul><li>vec_f32(vec_f32, vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_madds</font></b></p><ul><li>vec_s16(vec_s16, vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_max</font></b></p><ul><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_mergeh</font></b></p><ul><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_b16(vec_b16, vec_b16)</li><li>vec_p16(vec_p16, vec_p16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_mergel</font></b></p><ul><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_b16(vec_b16, vec_b16)</li><li>vec_p16(vec_p16, vec_p16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_mfvscr</font></b></p><ul><li>volatile_vec_u16()</li></ul><p><b><font SIZE=3>vec_min</font></b></p><ul><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_mladd</font></b></p><ul><li>vec_s16(vec_s16, vec_s16, vec_s16)</li><li>vec_s16(vec_s16, vec_u16, vec_u16)</li><li>vec_s16(vec_u16, vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_mradds</font></b></p><ul><li>vec_s16(vec_s16, vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_msum</font></b></p><ul><li>vec_s32(vec_s8, vec_u8, vec_s32)</li><li>vec_s32(vec_s16, vec_s16, vec_s32)</li><li>vec_u32(vec_u8, vec_u8, vec_u32)</li><li>vec_u32(vec_u16, vec_u16, vec_u32)</li></ul><p><b><font SIZE=3>vec_msums</font></b></p><ul><li>vec_s32(vec_s16, vec_s16, vec_s32)</li><li>vec_u32(vec_u16, vec_u16, vec_u32)</li></ul><p><b><font SIZE=3>vec_mtvscr</font></b></p><ul><li>volatile_void(vec_b16)</li><li>volatile_void(vec_b32)</li><li>volatile_void(vec_b8)</li><li>volatile_void(vec_p16)</li><li>volatile_void(vec_s16)</li><li>volatile_void(vec_s32)</li><li>volatile_void(vec_s8)</li><li>volatile_void(vec_u16)</li><li>volatile_void(vec_u32)</li><li>volatile_void(vec_u8)</li></ul><p><b><font SIZE=3>vec_mule</font></b></p><ul><li>vec_s16(vec_s8, vec_s8)</li><li>vec_s32(vec_s16, vec_s16)</li><li>vec_u16(vec_u8, vec_u8)</li><li>vec_u32(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_mulo</font></b></p><ul><li>vec_s16(vec_s8, vec_s8)</li><li>vec_s32(vec_s16, vec_s16)</li><li>vec_u16(vec_u8, vec_u8)</li><li>vec_u32(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_nmsub</font></b></p><ul><li>vec_f32(vec_f32, vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_nor</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_or</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_b32, vec_f32)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_pack</font></b></p><ul><li>vec_b8(vec_b16, vec_b16)</li><li>vec_s8(vec_s16, vec_s16)</li><li>vec_u8(vec_u16, vec_u16)</li><li>vec_b16(vec_b32, vec_b32)</li><li>vec_s16(vec_s32, vec_s32)</li><li>vec_u16(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_packpx</font></b></p><ul><li>vec_p16(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_packs</font></b></p><ul><li>vec_s8(vec_s16, vec_s16)</li><li>vec_s16(vec_s32, vec_s32)</li><li>vec_u8(vec_u16, vec_u16)</li><li>vec_u16(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_packsu</font></b></p><ul><li>vec_u8(vec_s16, vec_s16)</li><li>vec_u16(vec_s32, vec_s32)</li><li>vec_u8(vec_u16, vec_u16)</li><li>vec_u16(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_perm</font></b></p><ul><li>vec_b16(vec_b16, vec_b16, vec_u8)</li><li>vec_b32(vec_b32, vec_b32, vec_u8)</li><li>vec_b8(vec_b8, vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_f32, vec_u8)</li><li>vec_p16(vec_p16, vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_promote</font></b></p><ul><li>vec_f32(float, unsigned_int)</li><li>vec_s16(short, unsigned_int)</li><li>vec_s32(int, unsigned_int)</li><li>vec_s8(signed_char, unsigned_int)</li><li>vec_u16(unsigned_short, unsigned_int)</li><li>vec_u32(unsigned_int, unsigned_int)</li><li>vec_u8(unsigned_char, unsigned_int)</li></ul><p><b><font SIZE=3>vec_re</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_rl</font></b></p><ul><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_s16(vec_s16, vec_u16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_s32(vec_s32, vec_u32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_round</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_rsqrte</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_sel</font></b></p><ul><li>vec_b16(vec_b16, vec_b16, vec_b16)</li><li>vec_b16(vec_b16, vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32, vec_b32)</li><li>vec_b32(vec_b32, vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8, vec_b8)</li><li>vec_b8(vec_b8, vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32, vec_u32)</li><li>vec_s16(vec_s16, vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16, vec_u16)</li><li>vec_s32(vec_s32, vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32, vec_u32)</li><li>vec_s8(vec_s8, vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_sl</font></b></p><ul><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_s16(vec_s16, vec_u16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_s32(vec_s32, vec_u32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_sld</font></b></p><ul><li>vec_f32(vec_f32, vec_f32, immed_u4)</li><li>vec_p16(vec_p16, vec_p16, immed_u4)</li><li>vec_s16(vec_s16, vec_s16, immed_u4)</li><li>vec_s32(vec_s32, vec_s32, immed_u4)</li><li>vec_s8(vec_s8, vec_s8, immed_u4)</li><li>vec_u16(vec_u16, vec_u16, immed_u4)</li><li>vec_u32(vec_u32, vec_u32, immed_u4)</li><li>vec_u8(vec_u8, vec_u8, immed_u4)</li></ul><p><b><font SIZE=3>vec_sll</font></b></p><ul><li>vec_b16(vec_b16, vec_u16)</li><li>vec_b16(vec_b16, vec_u32)</li><li>vec_b16(vec_b16, vec_u8)</li><li>vec_b32(vec_b32, vec_u16)</li><li>vec_b32(vec_b32, vec_u32)</li><li>vec_b32(vec_b32, vec_u8)</li><li>vec_b8(vec_b8, vec_u16)</li><li>vec_b8(vec_b8, vec_u32)</li><li>vec_b8(vec_b8, vec_u8)</li><li>vec_p16(vec_p16, vec_u16)</li><li>vec_p16(vec_p16, vec_u32)</li><li>vec_p16(vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_u16)</li><li>vec_s16(vec_s16, vec_u32)</li><li>vec_s16(vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_u16)</li><li>vec_s32(vec_s32, vec_u32)</li><li>vec_s32(vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_u16)</li><li>vec_s8(vec_s8, vec_u32)</li><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u16(vec_u16, vec_u32)</li><li>vec_u16(vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_u16)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u32(vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_u16)</li><li>vec_u8(vec_u8, vec_u32)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_slo</font></b></p><ul><li>vec_f32(vec_f32, vec_s8)</li><li>vec_f32(vec_f32, vec_u8)</li><li>vec_p16(vec_p16, vec_s8)</li><li>vec_p16(vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_s8)</li><li>vec_s16(vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_s8)</li><li>vec_s32(vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_s8)</li><li>vec_u16(vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_s8)</li><li>vec_u32(vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_s8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_splat</font></b></p><ul><li>vec_b8(vec_b8, immed_u5)</li><li>vec_s8(vec_s8, immed_u5)</li><li>vec_u8(vec_u8, immed_u5)</li><li>vec_b16(vec_b16, immed_u5)</li><li>vec_p16(vec_p16, immed_u5)</li><li>vec_s16(vec_s16, immed_u5)</li><li>vec_u16(vec_u16, immed_u5)</li><li>vec_b32(vec_b32, immed_u5)</li><li>vec_f32(vec_f32, immed_u5)</li><li>vec_s32(vec_s32, immed_u5)</li><li>vec_u32(vec_u32, immed_u5)</li></ul><p><b><font SIZE=3>vec_splat_s16</font></b></p><ul><li>vec_s16(immed_s5)</li></ul><p><b><font SIZE=3>vec_splat_s32</font></b></p><ul><li>vec_s32(immed_s5)</li></ul><p><b><font SIZE=3>vec_splat_s8</font></b></p><ul><li>vec_s8(immed_s5)</li></ul><p><b><font SIZE=3>vec_splat_u16</font></b></p><ul><li>vec_u16(immed_s5)</li></ul><p><b><font SIZE=3>vec_splat_u32</font></b></p><ul><li>vec_u32(immed_s5)</li></ul><p><b><font SIZE=3>vec_splat_u8</font></b></p><ul><li>vec_u8(immed_s5)</li></ul><p><b><font SIZE=3>vec_splats</font></b></p><ul><li>vec_f32(float)</li><li>vec_s16(short)</li><li>vec_s32(int)</li><li>vec_s8(signed_char)</li><li>vec_u16(unsigned_short)</li><li>vec_u32(unsigned_int)</li><li>vec_u8(unsigned_char)</li></ul><p><b><font SIZE=3>vec_sr</font></b></p><ul><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_s16(vec_s16, vec_u16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_s32(vec_s32, vec_u32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_sra</font></b></p><ul><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_s16(vec_s16, vec_u16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_s32(vec_s32, vec_u32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_srl</font></b></p><ul><li>vec_b16(vec_b16, vec_u16)</li><li>vec_b16(vec_b16, vec_u32)</li><li>vec_b16(vec_b16, vec_u8)</li><li>vec_b32(vec_b32, vec_u16)</li><li>vec_b32(vec_b32, vec_u32)</li><li>vec_b32(vec_b32, vec_u8)</li><li>vec_b8(vec_b8, vec_u16)</li><li>vec_b8(vec_b8, vec_u32)</li><li>vec_b8(vec_b8, vec_u8)</li><li>vec_p16(vec_p16, vec_u16)</li><li>vec_p16(vec_p16, vec_u32)</li><li>vec_p16(vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_u16)</li><li>vec_s16(vec_s16, vec_u32)</li><li>vec_s16(vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_u16)</li><li>vec_s32(vec_s32, vec_u32)</li><li>vec_s32(vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_u16)</li><li>vec_s8(vec_s8, vec_u32)</li><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u16(vec_u16, vec_u32)</li><li>vec_u16(vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_u16)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u32(vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_u16)</li><li>vec_u8(vec_u8, vec_u32)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_sro</font></b></p><ul><li>vec_f32(vec_f32, vec_s8)</li><li>vec_f32(vec_f32, vec_u8)</li><li>vec_p16(vec_p16, vec_s8)</li><li>vec_p16(vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_s8)</li><li>vec_s16(vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_s8)</li><li>vec_s32(vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_s8)</li><li>vec_u16(vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_s8)</li><li>vec_u32(vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_s8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_st</font></b></p><ul><li>void(vec_b16, int, vec_b16_ptr)</li><li>void(vec_b32, int, vec_b32_ptr)</li><li>void(vec_b8, int, vec_b8_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_f32, int, vec_f32_ptr)</li><li>void(vec_p16, int, vec_p16_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_s16, int, vec_s16_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_s32, int, vec_s32_ptr)</li><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_s8, int, vec_s8_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_u16, int, vec_u16_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li><li>void(vec_u32, int, vec_u32_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_u8, int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_ste</font></b></p><ul><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li></ul><p><b><font SIZE=3>vec_stl</font></b></p><ul><li>void(vec_b16, int, vec_b16_ptr)</li><li>void(vec_b32, int, vec_b32_ptr)</li><li>void(vec_b8, int, vec_b8_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_f32, int, vec_f32_ptr)</li><li>void(vec_p16, int, vec_p16_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_s16, int, vec_s16_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_s32, int, vec_s32_ptr)</li><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_s8, int, vec_s8_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_u16, int, vec_u16_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li><li>void(vec_u32, int, vec_u32_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_u8, int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_stvebx</font></b></p><ul><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li></ul><p><b><font SIZE=3>vec_stvehx</font></b></p><ul><li>void(vec_s16, int, short_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li></ul><p><b><font SIZE=3>vec_stvewx</font></b></p><ul><li>void(vec_f32, int, float_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li></ul><p><b><font SIZE=3>vec_stvlx</font></b></p><ul><li>void(vec_b16, int, vec_b16_ptr)</li><li>void(vec_b32, int, vec_b32_ptr)</li><li>void(vec_b8, int, vec_b8_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_f32, int, vec_f32_ptr)</li><li>void(vec_p16, int, vec_p16_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_s16, int, vec_s16_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_s32, int, vec_s32_ptr)</li><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_s8, int, vec_s8_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_u16, int, vec_u16_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li><li>void(vec_u32, int, vec_u32_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_u8, int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_stvlxl</font></b></p><ul><li>void(vec_b16, int, vec_b16_ptr)</li><li>void(vec_b32, int, vec_b32_ptr)</li><li>void(vec_b8, int, vec_b8_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_f32, int, vec_f32_ptr)</li><li>void(vec_p16, int, vec_p16_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_s16, int, vec_s16_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_s32, int, vec_s32_ptr)</li><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_s8, int, vec_s8_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_u16, int, vec_u16_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li><li>void(vec_u32, int, vec_u32_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_u8, int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_stvrx</font></b></p><ul><li>void(vec_b16, int, vec_b16_ptr)</li><li>void(vec_b32, int, vec_b32_ptr)</li><li>void(vec_b8, int, vec_b8_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_f32, int, vec_f32_ptr)</li><li>void(vec_p16, int, vec_p16_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_s16, int, vec_s16_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_s32, int, vec_s32_ptr)</li><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_s8, int, vec_s8_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_u16, int, vec_u16_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li><li>void(vec_u32, int, vec_u32_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_u8, int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_stvrxl</font></b></p><ul><li>void(vec_b16, int, vec_b16_ptr)</li><li>void(vec_b32, int, vec_b32_ptr)</li><li>void(vec_b8, int, vec_b8_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_f32, int, vec_f32_ptr)</li><li>void(vec_p16, int, vec_p16_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_s16, int, vec_s16_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_s32, int, vec_s32_ptr)</li><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_s8, int, vec_s8_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_u16, int, vec_u16_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li><li>void(vec_u32, int, vec_u32_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_u8, int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_stvx</font></b></p><ul><li>void(vec_b16, int, vec_b16_ptr)</li><li>void(vec_b32, int, vec_b32_ptr)</li><li>void(vec_b8, int, vec_b8_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_f32, int, vec_f32_ptr)</li><li>void(vec_p16, int, vec_p16_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_s16, int, vec_s16_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_s32, int, vec_s32_ptr)</li><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_s8, int, vec_s8_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_u16, int, vec_u16_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li><li>void(vec_u32, int, vec_u32_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_u8, int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_stvxl</font></b></p><ul><li>void(vec_b16, int, vec_b16_ptr)</li><li>void(vec_b32, int, vec_b32_ptr)</li><li>void(vec_b8, int, vec_b8_ptr)</li><li>void(vec_f32, int, float_ptr)</li><li>void(vec_f32, int, vec_f32_ptr)</li><li>void(vec_p16, int, vec_p16_ptr)</li><li>void(vec_s16, int, short_ptr)</li><li>void(vec_s16, int, vec_s16_ptr)</li><li>void(vec_s32, int, int_ptr)</li><li>void(vec_s32, int, long_ptr)</li><li>void(vec_s32, int, vec_s32_ptr)</li><li>void(vec_s8, int, signed_char_ptr)</li><li>void(vec_s8, int, vec_s8_ptr)</li><li>void(vec_u16, int, unsigned_short_ptr)</li><li>void(vec_u16, int, vec_u16_ptr)</li><li>void(vec_u32, int, unsigned_int_ptr)</li><li>void(vec_u32, int, unsigned_long_ptr)</li><li>void(vec_u32, int, vec_u32_ptr)</li><li>void(vec_u8, int, unsigned_char_ptr)</li><li>void(vec_u8, int, vec_u8_ptr)</li></ul><p><b><font SIZE=3>vec_sub</font></b></p><ul><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_subc</font></b></p><ul><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_subs</font></b></p><ul><li>vec_s8(vec_b8, vec_s8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_sum2s</font></b></p><ul><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_sum4s</font></b></p><ul><li>vec_s32(vec_s8, vec_s32)</li><li>vec_s32(vec_s16, vec_s32)</li><li>vec_u32(vec_u8, vec_u32)</li></ul><p><b><font SIZE=3>vec_sums</font></b></p><ul><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_trunc</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_unpack2sh</font></b></p><ul><li>vec_s32(vec_u16, vec_u16)</li><li>vec_s16(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_unpack2sl</font></b></p><ul><li>vec_s32(vec_u16, vec_u16)</li><li>vec_s16(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_unpack2uh</font></b></p><ul><li>vec_u32(vec_u16, vec_u16)</li><li>vec_u16(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_unpack2ul</font></b></p><ul><li>vec_u32(vec_u16, vec_u16)</li><li>vec_u16(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_unpackh</font></b></p><ul><li>vec_u32(vec_p16)</li><li>vec_b16(vec_b8)</li><li>vec_s16(vec_s8)</li><li>vec_b32(vec_b16)</li><li>vec_s32(vec_s16)</li></ul><p><b><font SIZE=3>vec_unpackl</font></b></p><ul><li>vec_u32(vec_p16)</li><li>vec_b16(vec_b8)</li><li>vec_s16(vec_s8)</li><li>vec_b32(vec_b16)</li><li>vec_s32(vec_s16)</li></ul><p><b><font SIZE=3>vec_vaddcuw</font></b></p><ul><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vaddfp</font></b></p><ul><li>vec_f32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vaddsbs</font></b></p><ul><li>vec_s8(vec_b8, vec_s8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li></ul><p><b><font SIZE=3>vec_vaddshs</font></b></p><ul><li>vec_s16(vec_b16, vec_s16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vaddsws</font></b></p><ul><li>vec_s32(vec_b32, vec_s32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vaddubm</font></b></p><ul><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vaddubs</font></b></p><ul><li>vec_u8(vec_b8, vec_u8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vadduhm</font></b></p><ul><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vadduhs</font></b></p><ul><li>vec_u16(vec_b16, vec_u16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vadduwm</font></b></p><ul><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vadduws</font></b></p><ul><li>vec_u32(vec_b32, vec_u32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vand</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_b32, vec_f32)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vandc</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_b32, vec_f32)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vavgsb</font></b></p><ul><li>vec_s8(vec_s8, vec_s8)</li></ul><p><b><font SIZE=3>vec_vavgsh</font></b></p><ul><li>vec_s16(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vavgsw</font></b></p><ul><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vavgub</font></b></p><ul><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vavguh</font></b></p><ul><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vavguw</font></b></p><ul><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vcfsx</font></b></p><ul><li>vec_f32(vec_s32, immed_u5)</li></ul><p><b><font SIZE=3>vec_vcfux</font></b></p><ul><li>vec_f32(vec_u32, immed_u5)</li></ul><p><b><font SIZE=3>vec_vcmpbfp</font></b></p><ul><li>vec_s32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vcmpeqfp</font></b></p><ul><li>vec_b32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vcmpequb</font></b></p><ul><li>vec_b8(vec_s8, vec_s8)</li><li>vec_b8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vcmpequh</font></b></p><ul><li>vec_b16(vec_s16, vec_s16)</li><li>vec_b16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vcmpequw</font></b></p><ul><li>vec_b32(vec_s32, vec_s32)</li><li>vec_b32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vcmpgefp</font></b></p><ul><li>vec_b32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vcmpgtfp</font></b></p><ul><li>vec_b32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vcmpgtsb</font></b></p><ul><li>vec_b8(vec_s8, vec_s8)</li></ul><p><b><font SIZE=3>vec_vcmpgtsh</font></b></p><ul><li>vec_b16(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vcmpgtsw</font></b></p><ul><li>vec_b32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vcmpgtub</font></b></p><ul><li>vec_b8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vcmpgtuh</font></b></p><ul><li>vec_b16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vcmpgtuw</font></b></p><ul><li>vec_b32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vctsxs</font></b></p><ul><li>vec_s32(vec_f32, immed_u5)</li></ul><p><b><font SIZE=3>vec_vctuxs</font></b></p><ul><li>vec_u32(vec_f32, immed_u5)</li></ul><p><b><font SIZE=3>vec_vexptefp</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_vlogefp</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_vmaddfp</font></b></p><ul><li>vec_f32(vec_f32, vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vmaxfp</font></b></p><ul><li>vec_f32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vmaxsb</font></b></p><ul><li>vec_s8(vec_b8, vec_s8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li></ul><p><b><font SIZE=3>vec_vmaxsh</font></b></p><ul><li>vec_s16(vec_b16, vec_s16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vmaxsw</font></b></p><ul><li>vec_s32(vec_b32, vec_s32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vmaxub</font></b></p><ul><li>vec_u8(vec_b8, vec_u8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vmaxuh</font></b></p><ul><li>vec_u16(vec_b16, vec_u16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vmaxuw</font></b></p><ul><li>vec_u32(vec_b32, vec_u32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vmhaddshs</font></b></p><ul><li>vec_s16(vec_s16, vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vmhraddshs</font></b></p><ul><li>vec_s16(vec_s16, vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vminfp</font></b></p><ul><li>vec_f32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vminsb</font></b></p><ul><li>vec_s8(vec_b8, vec_s8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li></ul><p><b><font SIZE=3>vec_vminsh</font></b></p><ul><li>vec_s16(vec_b16, vec_s16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vminsw</font></b></p><ul><li>vec_s32(vec_b32, vec_s32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vminub</font></b></p><ul><li>vec_u8(vec_b8, vec_u8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vminuh</font></b></p><ul><li>vec_u16(vec_b16, vec_u16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vminuw</font></b></p><ul><li>vec_u32(vec_b32, vec_u32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vmladduhm</font></b></p><ul><li>vec_s16(vec_s16, vec_s16, vec_s16)</li><li>vec_s16(vec_s16, vec_u16, vec_u16)</li><li>vec_s16(vec_u16, vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vmrghb</font></b></p><ul><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vmrghh</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_p16(vec_p16, vec_p16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vmrghw</font></b></p><ul><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vmrglb</font></b></p><ul><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vmrglh</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_p16(vec_p16, vec_p16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vmrglw</font></b></p><ul><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vmsummbm</font></b></p><ul><li>vec_s32(vec_s8, vec_u8, vec_s32)</li></ul><p><b><font SIZE=3>vec_vmsumshm</font></b></p><ul><li>vec_s32(vec_s16, vec_s16, vec_s32)</li></ul><p><b><font SIZE=3>vec_vmsumshs</font></b></p><ul><li>vec_s32(vec_s16, vec_s16, vec_s32)</li></ul><p><b><font SIZE=3>vec_vmsumubm</font></b></p><ul><li>vec_u32(vec_u8, vec_u8, vec_u32)</li></ul><p><b><font SIZE=3>vec_vmsumuhm</font></b></p><ul><li>vec_u32(vec_u16, vec_u16, vec_u32)</li></ul><p><b><font SIZE=3>vec_vmsumuhs</font></b></p><ul><li>vec_u32(vec_u16, vec_u16, vec_u32)</li></ul><p><b><font SIZE=3>vec_vmulesb</font></b></p><ul><li>vec_s16(vec_s8, vec_s8)</li></ul><p><b><font SIZE=3>vec_vmulesh</font></b></p><ul><li>vec_s32(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vmuleub</font></b></p><ul><li>vec_u16(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vmuleuh</font></b></p><ul><li>vec_u32(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vmulosb</font></b></p><ul><li>vec_s16(vec_s8, vec_s8)</li></ul><p><b><font SIZE=3>vec_vmulosh</font></b></p><ul><li>vec_s32(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vmuloub</font></b></p><ul><li>vec_u16(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vmulouh</font></b></p><ul><li>vec_u32(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vnmsubfp</font></b></p><ul><li>vec_f32(vec_f32, vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vnor</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vor</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_b32, vec_f32)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vperm</font></b></p><ul><li>vec_b16(vec_b16, vec_b16, vec_u8)</li><li>vec_b32(vec_b32, vec_b32, vec_u8)</li><li>vec_b8(vec_b8, vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_f32, vec_u8)</li><li>vec_p16(vec_p16, vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vpkpx</font></b></p><ul><li>vec_p16(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vpkshss</font></b></p><ul><li>vec_s8(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vpkshus</font></b></p><ul><li>vec_u8(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vpkswss</font></b></p><ul><li>vec_s16(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vpkswus</font></b></p><ul><li>vec_u16(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vpkuhum</font></b></p><ul><li>vec_b8(vec_b16, vec_b16)</li><li>vec_s8(vec_s16, vec_s16)</li><li>vec_u8(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vpkuhus</font></b></p><ul><li>vec_u8(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vpkuwum</font></b></p><ul><li>vec_b16(vec_b32, vec_b32)</li><li>vec_s16(vec_s32, vec_s32)</li><li>vec_u16(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vpkuwus</font></b></p><ul><li>vec_u16(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vrefp</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_vrfim</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_vrfin</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_vrfip</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_vrfiz</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_vrlb</font></b></p><ul><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vrlh</font></b></p><ul><li>vec_s16(vec_s16, vec_u16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vrlw</font></b></p><ul><li>vec_s32(vec_s32, vec_u32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vrsqrtefp</font></b></p><ul><li>vec_f32(vec_f32)</li></ul><p><b><font SIZE=3>vec_vsel</font></b></p><ul><li>vec_b16(vec_b16, vec_b16, vec_b16)</li><li>vec_b16(vec_b16, vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32, vec_b32)</li><li>vec_b32(vec_b32, vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8, vec_b8)</li><li>vec_b8(vec_b8, vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32, vec_u32)</li><li>vec_s16(vec_s16, vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16, vec_u16)</li><li>vec_s32(vec_s32, vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32, vec_u32)</li><li>vec_s8(vec_s8, vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vsl</font></b></p><ul><li>vec_b16(vec_b16, vec_u16)</li><li>vec_b16(vec_b16, vec_u32)</li><li>vec_b16(vec_b16, vec_u8)</li><li>vec_b32(vec_b32, vec_u16)</li><li>vec_b32(vec_b32, vec_u32)</li><li>vec_b32(vec_b32, vec_u8)</li><li>vec_b8(vec_b8, vec_u16)</li><li>vec_b8(vec_b8, vec_u32)</li><li>vec_b8(vec_b8, vec_u8)</li><li>vec_p16(vec_p16, vec_u16)</li><li>vec_p16(vec_p16, vec_u32)</li><li>vec_p16(vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_u16)</li><li>vec_s16(vec_s16, vec_u32)</li><li>vec_s16(vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_u16)</li><li>vec_s32(vec_s32, vec_u32)</li><li>vec_s32(vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_u16)</li><li>vec_s8(vec_s8, vec_u32)</li><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u16(vec_u16, vec_u32)</li><li>vec_u16(vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_u16)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u32(vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_u16)</li><li>vec_u8(vec_u8, vec_u32)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vslb</font></b></p><ul><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vsldoi</font></b></p><ul><li>vec_f32(vec_f32, vec_f32, immed_u4)</li><li>vec_p16(vec_p16, vec_p16, immed_u4)</li><li>vec_s16(vec_s16, vec_s16, immed_u4)</li><li>vec_s32(vec_s32, vec_s32, immed_u4)</li><li>vec_s8(vec_s8, vec_s8, immed_u4)</li><li>vec_u16(vec_u16, vec_u16, immed_u4)</li><li>vec_u32(vec_u32, vec_u32, immed_u4)</li><li>vec_u8(vec_u8, vec_u8, immed_u4)</li></ul><p><b><font SIZE=3>vec_vslh</font></b></p><ul><li>vec_s16(vec_s16, vec_u16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vslo</font></b></p><ul><li>vec_f32(vec_f32, vec_s8)</li><li>vec_f32(vec_f32, vec_u8)</li><li>vec_p16(vec_p16, vec_s8)</li><li>vec_p16(vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_s8)</li><li>vec_s16(vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_s8)</li><li>vec_s32(vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_s8)</li><li>vec_u16(vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_s8)</li><li>vec_u32(vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_s8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vslw</font></b></p><ul><li>vec_s32(vec_s32, vec_u32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vspltb</font></b></p><ul><li>vec_b8(vec_b8, immed_u5)</li><li>vec_s8(vec_s8, immed_u5)</li><li>vec_u8(vec_u8, immed_u5)</li></ul><p><b><font SIZE=3>vec_vsplth</font></b></p><ul><li>vec_b16(vec_b16, immed_u5)</li><li>vec_p16(vec_p16, immed_u5)</li><li>vec_s16(vec_s16, immed_u5)</li><li>vec_u16(vec_u16, immed_u5)</li></ul><p><b><font SIZE=3>vec_vspltisb</font></b></p><ul><li>vec_s8(immed_s5)</li></ul><p><b><font SIZE=3>vec_vspltish</font></b></p><ul><li>vec_s16(immed_s5)</li></ul><p><b><font SIZE=3>vec_vspltisw</font></b></p><ul><li>vec_s32(immed_s5)</li></ul><p><b><font SIZE=3>vec_vspltw</font></b></p><ul><li>vec_b32(vec_b32, immed_u5)</li><li>vec_f32(vec_f32, immed_u5)</li><li>vec_s32(vec_s32, immed_u5)</li><li>vec_u32(vec_u32, immed_u5)</li></ul><p><b><font SIZE=3>vec_vsr</font></b></p><ul><li>vec_b16(vec_b16, vec_u16)</li><li>vec_b16(vec_b16, vec_u32)</li><li>vec_b16(vec_b16, vec_u8)</li><li>vec_b32(vec_b32, vec_u16)</li><li>vec_b32(vec_b32, vec_u32)</li><li>vec_b32(vec_b32, vec_u8)</li><li>vec_b8(vec_b8, vec_u16)</li><li>vec_b8(vec_b8, vec_u32)</li><li>vec_b8(vec_b8, vec_u8)</li><li>vec_p16(vec_p16, vec_u16)</li><li>vec_p16(vec_p16, vec_u32)</li><li>vec_p16(vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_u16)</li><li>vec_s16(vec_s16, vec_u32)</li><li>vec_s16(vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_u16)</li><li>vec_s32(vec_s32, vec_u32)</li><li>vec_s32(vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_u16)</li><li>vec_s8(vec_s8, vec_u32)</li><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u16(vec_u16, vec_u32)</li><li>vec_u16(vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_u16)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u32(vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_u16)</li><li>vec_u8(vec_u8, vec_u32)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vsrab</font></b></p><ul><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vsrah</font></b></p><ul><li>vec_s16(vec_s16, vec_u16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vsraw</font></b></p><ul><li>vec_s32(vec_s32, vec_u32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vsrb</font></b></p><ul><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vsrh</font></b></p><ul><li>vec_s16(vec_s16, vec_u16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vsro</font></b></p><ul><li>vec_f32(vec_f32, vec_s8)</li><li>vec_f32(vec_f32, vec_u8)</li><li>vec_p16(vec_p16, vec_s8)</li><li>vec_p16(vec_p16, vec_u8)</li><li>vec_s16(vec_s16, vec_s8)</li><li>vec_s16(vec_s16, vec_u8)</li><li>vec_s32(vec_s32, vec_s8)</li><li>vec_s32(vec_s32, vec_u8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_s8(vec_s8, vec_u8)</li><li>vec_u16(vec_u16, vec_s8)</li><li>vec_u16(vec_u16, vec_u8)</li><li>vec_u32(vec_u32, vec_s8)</li><li>vec_u32(vec_u32, vec_u8)</li><li>vec_u8(vec_u8, vec_s8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vsrw</font></b></p><ul><li>vec_s32(vec_s32, vec_u32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vsubcuw</font></b></p><ul><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vsubfp</font></b></p><ul><li>vec_f32(vec_f32, vec_f32)</li></ul><p><b><font SIZE=3>vec_vsubsbs</font></b></p><ul><li>vec_s8(vec_b8, vec_s8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li></ul><p><b><font SIZE=3>vec_vsubshs</font></b></p><ul><li>vec_s16(vec_b16, vec_s16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li></ul><p><b><font SIZE=3>vec_vsubsws</font></b></p><ul><li>vec_s32(vec_b32, vec_s32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vsububm</font></b></p><ul><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vsububs</font></b></p><ul><li>vec_u8(vec_b8, vec_u8)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_vsubuhm</font></b></p><ul><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vsubuhs</font></b></p><ul><li>vec_u16(vec_b16, vec_u16)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li></ul><p><b><font SIZE=3>vec_vsubuwm</font></b></p><ul><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vsubuws</font></b></p><ul><li>vec_u32(vec_b32, vec_u32)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li></ul><p><b><font SIZE=3>vec_vsum2sws</font></b></p><ul><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vsum4sbs</font></b></p><ul><li>vec_s32(vec_s8, vec_s32)</li></ul><p><b><font SIZE=3>vec_vsum4shs</font></b></p><ul><li>vec_s32(vec_s16, vec_s32)</li></ul><p><b><font SIZE=3>vec_vsum4ubs</font></b></p><ul><li>vec_u32(vec_u8, vec_u32)</li></ul><p><b><font SIZE=3>vec_vsumsws</font></b></p><ul><li>vec_s32(vec_s32, vec_s32)</li></ul><p><b><font SIZE=3>vec_vupkhpx</font></b></p><ul><li>vec_u32(vec_p16)</li></ul><p><b><font SIZE=3>vec_vupkhsb</font></b></p><ul><li>vec_b16(vec_b8)</li><li>vec_s16(vec_s8)</li></ul><p><b><font SIZE=3>vec_vupkhsh</font></b></p><ul><li>vec_b32(vec_b16)</li><li>vec_s32(vec_s16)</li></ul><p><b><font SIZE=3>vec_vupklpx</font></b></p><ul><li>vec_u32(vec_p16)</li></ul><p><b><font SIZE=3>vec_vupklsb</font></b></p><ul><li>vec_b16(vec_b8)</li><li>vec_s16(vec_s8)</li></ul><p><b><font SIZE=3>vec_vupklsh</font></b></p><ul><li>vec_b32(vec_b16)</li><li>vec_s32(vec_s16)</li></ul><p><b><font SIZE=3>vec_vxor</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_b32, vec_f32)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul><p><b><font SIZE=3>vec_xor</font></b></p><ul><li>vec_b16(vec_b16, vec_b16)</li><li>vec_s16(vec_b16, vec_s16)</li><li>vec_u16(vec_b16, vec_u16)</li><li>vec_b32(vec_b32, vec_b32)</li><li>vec_f32(vec_b32, vec_f32)</li><li>vec_s32(vec_b32, vec_s32)</li><li>vec_u32(vec_b32, vec_u32)</li><li>vec_b8(vec_b8, vec_b8)</li><li>vec_s8(vec_b8, vec_s8)</li><li>vec_u8(vec_b8, vec_u8)</li><li>vec_f32(vec_f32, vec_b32)</li><li>vec_f32(vec_f32, vec_f32)</li><li>vec_s16(vec_s16, vec_b16)</li><li>vec_s16(vec_s16, vec_s16)</li><li>vec_s32(vec_s32, vec_b32)</li><li>vec_s32(vec_s32, vec_s32)</li><li>vec_s8(vec_s8, vec_b8)</li><li>vec_s8(vec_s8, vec_s8)</li><li>vec_u16(vec_u16, vec_b16)</li><li>vec_u16(vec_u16, vec_u16)</li><li>vec_u32(vec_u32, vec_b32)</li><li>vec_u32(vec_u32, vec_u32)</li><li>vec_u8(vec_u8, vec_b8)</li><li>vec_u8(vec_u8, vec_u8)</li></ul></font></body></html>