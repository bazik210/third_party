[SCE CONFIDENTIAL DOCUMENT]
PlayStation(R)3 Programmer Tool Toolchain 310.001
                    Copyright(C) 2009 Sony Computer Entertainment Inc.
                                                   All Rights Reserved.
======================================================================
The following are known bugs and limitations on PlayStation(R)3 Programmer
Tool Toolchain package.

----------------------------------------------------------------------
SN Systems Linker
----------------------------------------------------------------------
(B#41363)
- The dead code and data stripping implementation in the SN Systems linker
  requires that all object files and libraries are built with the SDK200 or
  later toolchains.  Any object files or libraries built with earlier
  versions will not be dead stripped.

  If you rely on libraries built with earlier versions of the toolchain
  (such as middleware), please contact developer support for a tool which
  can be used to update these to enable dead stripping.

(B#70639)
- --compress-output is not compatible with --write-fself-digest

----------------------------------------------------------------------
GCC
----------------------------------------------------------------------
<PPU>
(B#60067)
- If the option -mbase-toc or -mall-base-toc is used to build a PRX,
  ppu-lv2-prx-fixup will panic. Please do not use the options to
  generate a PRX.

(B#54688)
- If a function with variable arguemnts receives a structure with
  __attribute__((aligned (N))) and a long long or long double, there is
  a problem that va_arg macro accesses incorrect values in some cases.

- When 2 programs such as the codes in the example below are compiled, 
  a different code is generated respectively.

  Example)
  --- program1 -----
   A foo;
   B bar;
   foo = *reinterpret_cast<A *>(&bar);
  --- program2 ----
   A foo;
   B bar;
   *reinterpret_cast<B *>(&foo) = bar;

- When the following cast is performed, the program does not work 
  correctly.

  dist += a->b[0] * (*reinterpret_cast< const vec_t * >
  ( reinterpret_cast< const byte * >(arg)+ c->d[0] ));

- When a program such as the code in the example below, which uses the 
  __may_alias__ attribute within the template is compiled, an internal 
  compiler error occurs.

  Example)
  template <typename T>
  void f() 
  { 
    typedef T __attribute__((__may_alias__)) A;
  }

- Although an optimization process is performed when compiling a program,
  the clrldi instruction which is not required may be output.

- When a program that contains the VMX instruction is compiled, the 
  optimization is not performed efficiently.
  Accordingly, an unnecessary instruction may be left within the 
  internal processing of the loop statement. When this problem occurs,
  describe the processing of the loop statement using the asm statement.

- In PPU program, even when "align" is specified to the variable 
  assigned to the TLS area, the alignment process may not be performed.
  This behavior is defined by the specifications of Cell OS Lv-2.
  Please do not specify "align".

- When calling other functions from the PPU program in the assembly 
  language, the following should be noted to set the correct value 
  for TOC pointer(r2).
  Note: They do not apply to the case where -mno-toc option is used.

  (1) Always insert nop instruction after bl instruction. By doing so,
      when the function to be called uses a different TOC pointer, 
      the linker will generate a linkage code to replace nop with an 
      appropriate instruction.

      Example:
                 bl              .foo
                 nop

  (2) Always include ".toc" section (can be empty) in the assembler
      source file. This is a current restriction of GNU linker.

      Example: Put the following at the beginning of the file
           .section        ".toc","aw"
           .section        ".text"

<SPU>
- According to chapter 7 of "Cell OS Lv-2 C/C++ Language Extensions 
  for SPU", when the type of an operand within an expression is double 
  and the operand is a denormal number, it should be considered as 0.0 
  or -0.0. However, with the current compiler, the optimization result 
  may not adhere to this.

- If the -funroll-loops option and the -frerun-cse-before-sched option 
  are specified at the same time, an incorrect code is generated.
  Please do not specify the -frerun-cse-before-sched option.

- If an object or elf that includes the brsl instruction is disassembled 
  with spu-lv2-objdump, not the value to be added to $pc, but the address
  that is obtained by adding s18 and $pc is displayed with the "brsl rt,
  s18" instruction.

(Updated in Release 310.001)
(B#39719,B#75468)
- The following relocation types:
    R_SPU_PPU32, R_SPU_PPU64, including the corresponding assembly syntax 
  example of "foo@ppu" described in 
  "Cell Broadband Engine(TM) and SPU ABI Specifications for Cell OS Lv-2" 
  are not supported, except for the use in CELL_SPURS_PPU_SYM macro 
  described in "libspurs Core Reference" and "libspurs Overview".

<PPU/SPU>
(B#63219)
- When defining static data members in template declarations, 
  the initilization order does not conform to the C++ standard 
  in some cases.

(B#63489)
- There are restrictions on the __restrict keyword as shown below:
  The code that access arrays in the way shown in the following 
  example will not be optimized.

    void
    slow(__vector float *__restrict__ dst,
         __vector float *__restrict__ src,
         int n)
    {
      int i;
      for (i = 0; i < n; i+=4)
      {
        dst[i] = src[i];
        dst[i+1] = src[i+1];
        dst[i+2] = src[i+2];
        dst[i+3] = src[i+3];
      }
    }
  The code that use char pointers in the way shown in the following
  example will not be optimized.

    int f(char *restrict a, char * restrict b)
    {
      *b = 1;
      *a = 2;
      if (*b != 1)
        link_failure ();
      return *a;
    }

- When the header file that uses a C++ anonymous namespace is precompiled
  and multiple object files that use the header file are linked,
  the following error is displayed: 

    multiple definition of `(anonymous namespace)::x'

- When a header file is pre-compiled with -MD or -MMD options, a 
  dependency file to be generated incorrectly contains the dependency
  infomation of the .o file.
  In such a case, explicitly specify the output file at the pre-compiling
  process as shown below:

   Example: ppu-lv2-gcc -MMD test.h -o test.h.gch

- If vmx2spu.h or spu2vmx.h is used from C programs, errors are
  displayed. To avoid the problem, please use it from C++ programs.

- When a program with a comment, as in the example below, is compiled, 
  a warning message is output to the console.

  Example)
  //int blahblah;\
  //int behbeh;
