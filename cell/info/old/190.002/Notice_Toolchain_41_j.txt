[SCE CONFIDENTIAL DOCUMENT]
PLAYSTATION(R)3 Programmer Tool Toolchain 190.002
                    Copyright(C) 2007 Sony Computer Entertainment Inc.
                                                   All Rights Reserved.
======================================================================
以下にPLAYSTATION(R)3 Programmer Tool Toolchain に関する既知の不具合・
制限事項を記述します。

新規に追加又は更新した箇所にリリースバージョンを追加しましたので
参照してください。

----------------------------------------------------------------------
GCC
----------------------------------------------------------------------
<PPU/SPU共通>
(Release 190.002 で追加)
- 「Code Instrumentation at Link-Time (CIL) ユーザガイド」に記載されている
  サンプルプログラムは、パッケージには含まれていません。

(Release 190.002 で追加)
- C++のanonymous namespaceを使用したヘッダファイルをプリコンパイルし、
  それを利用した複数のオブジェクトファイルをリンクすると、以下のエラーが
  表示されてしまう不具合があります。

    multiple definition of `(anonymous namespace)::x'

- ヘッダファイルを-MDまたは-MMDオプションを指定してプリコンパイルすると、
  生成される依存ファイルが.oファイルのものになるという不具合があります。
  このような場合は、例のように出力ファイルを明示してプリコンパイルして
  ください。

  例: ppu-lv2-gcc -MMD test.h -o test.h.gch

- vmx2spu.hまたはspu2vmx.hをC言語のプログラムで使用すると、エラー
  が表示されてしまう不具合があります。C++言語のプログラムで使用する
  ようにしてください。

- Windows環境において、例のコードのようなプログラムを-frepoオプション
  指定で
  コンパイルしリンクを行うと、リンクエラーが発生する不具合があります。

  例) 
      template<typename T>
         T Max(T a, T b) 
                { 
                  return a > b ? a : b;
                }

      int main(){
                  char cbuf;
                  cbuf = Max('1', '2');
                }

- 例のようなコメントを記述したプログラムをコンパイルすると、警告が
  コンソール上へ出力されます。

  例)
  //int blahblah;\
  //int behbeh;

- 構造体の別名宣言に__may_alias__属性を利用するプログラムをコンパイル
  するとinternal compiler errorが発生します。

  typedef struct
  {
      char a;
      char b; 
      char c;
      char d;
  } test;
  typedef test __attribute__((__may_alias__)) test_a;

<PPU側>
(Release 190.002 で追加)
- vec_sel組み込み関数を使用しているゲームアプリケーションプログラムを
  -O1以上でコンパイルすると、internal compiler errorが発生する場合がある
  という不具合があります。

(Release 190.002 で追加)
- ppu_intrinsics.h内の組み込み関数__ldarxを使用するとinternal compiler
  errorが発生するという不具合があります。

- オプション-Wallまたは-Wformatをつけてコンパイルすると、time.hの関数
  strftimeで変換指定%Erを使用した場合に警告が表示されます。
  変換指定%Erは、非標準の拡張機能ですので、この警告を無視して問題ありません。

- 例のコードのような2つのプログラムをコンパイルした場合、それぞれの
  生成されるコードが異なります。

  例)
  --- program1 -----
   A foo;
   B bar;
   foo = *reinterpret_cast<A *>(&bar);
  --- program2 ----
   A foo;
   B bar;
   *reinterpret_cast<B *>(&foo) = bar;

- 例のコードのようなプログラムを、-O2以上の最適化オプションをつけて
  コンパイルした結果が、gcc3.4でコンパイルした結果に比べて最適化されません。

  例)
  typedef union
  {
    float f[4];
    vector float vf;
  }
  Union128;
  vector float
  make_vector_from_float (float x, float y, float z, float w)
  {
    Union128 u;

    u.f[0] = x;
    u.f[1] = y;
    u.f[2] = z;
    u.f[3] = w;
    return u.vf;
  }

- 以下のようにキャストした場合、その処理が正しく行われません。

  dist += a->b[0] * (*reinterpret_cast< const vec_t * >
  ( reinterpret_cast< const byte * >(arg)+ c->d[0] ));


- 例のコードのようなプログラムを最適化してコンパイルしたにも関わらず、
  不要な命令が出力される場合があります。

 例)
 -- プログラム ---
    while(size>0){
        *(dst++) = *(src++);
        size--;
    }
 -- アセンブリコード ---
    ld 11,0(4)
    addi 0,3,8
    addi 9,4,8
    std 11,0(3)
    rldicl 3,0,0,32 <- 不要
    rldicl 4,9,0,32 <- 不要
    bdnz .L4
    blr"

- 例のように、template内で__may_alias__属性を利用するプログラムを
  コンパイルした場合、internal compiler errorが発生します。

  例)
  template <typename T>
  void f() 
  { 
    typedef T __attribute__((__may_alias__)) A;
  }

- コンパイラがプログラム最適化したにも関わらず不要なclrldi命令を
  出力することがあります。

- VMX命令を含むプログラムに対するコンパイラの最適化が十分ではない
  という不具合があります。このためループ文の内部処理などに不要命令など
  が残されることがあります。このような性能上の問題になるときは、
  ループ文の処理をasm文で記述してください。

(Release 190.002 で更新)
- PPUプログラムでは、TLS領域に割り当てた変数へのalign指定を行っても
  アラインメントが行われないことがあります。align指定は行わないでください。
  これはCell OS Lv-2の仕様です。

- アセンブリ言語のPPUプログラムから他の関数を呼び出す際に、
  TOC pointer(r2)の値を正しく設定するには、以下の注意事項があります。

  (1) bl命令の後に必ずnop命令を置いてください。
      こうすることで、呼び出される関数が異なるTOC pointerを使用する場合、
      リンカがlinkage codeを生成し、nopを適切な命令で、置き換えることが
      出来ます。
      例:
                 bl              .foo
                 nop

  (2) アセンブラソースファイル中に必ず".toc"セクションを含めてください。
      (空でもかまいません)。これは、現状のリンカの制限事項となります。
     例: ファイルの先頭に以下を置く
           .section        ".toc","aw"
           .section        ".text"

<SPU側>
(Release 190.002 で追加)
- STLを使用するヘッダをプリコンパイルし、それを使うプログラムをコンパイル
  すると、internal compiler errorが発生します。

- math.hヘッダファイルとC++ STLのvectorヘッダファイルのインクルード
  順序によって、構文エラーが発生します。
  両者をインクルードする場合は必ずmath.hを先にインクルードしてください。

  例)
  /* OK */
  #include <math.h>
  #include <vector>

  /* NG */
  #include <vector>
  #include <math.h>

- オプション-fpicを指定して位置独立(PIC)コードを生成した場合、C++の仮想
  関数は使用できません。

- 「Cell OS Lv-2 SPU C/C++ 言語拡張」の7章によれば、式中のオペランドが
  double型で非正規化数(denormal number)の場合には、0.0または-0.0と
  みなさなければなりません。しかし、現状のコンパイラでは最適化の結果が
  これに従わない場合があるという不具合があります。

- -funroll-loopsオプションと-frerun-cse-before-schedオプションを同時に
  指定すると、誤ったコードが生成される不具合があります。
  -frerun-cse-before-schedオプションは指定しないでください。

- brsl命令が含まれているオブジェクトやelfをspu-lv2-objdumpで
  逆アセンブルした場合に"brsl rt, s18"で示すs18は$pcへの加算値ではなく、
  s18と$pcのアドレスを加算したアドレスを表示します。

(Release 190.002 で更新)
- spu-lv2-gccおよびspu-lv2-g++で、最適化オプション-O1以上を使用すると、
  spu_roundfおよびsi_frds組み込み関数の引数がコンパイル時に計算できる
  場合に、指定された丸めモード(デフォルトは最近値)で計算されず、切り捨てて
  計算されてしまいます。

  例)
    vec_float4 f(void) {
      return spu_roundtf(((vec_double2){
        0,12345678.9
      }));
    }

- システムヘッダ"spu_internals.h"をインクルードしたプログラムを
  そのヘッダファイルへのパスを-Iオプションで指定してコンパイルした場合、
  警告がコンソール上へ出力されます。

  C:\support>spu-lv2-gcc -Wall -I%SCE_PS3_ROOT%/target/spu/include -c main.cpp
  C:/usr/local/cell/096/target/spu/include/spu_internals.h:63: warning: specifying
   vector types with __attribute__ ((mode)) is deprecated
  C:/usr/local/cell/096/target/spu/include/spu_internals.h:63: warning: use
  __attribute__ ((vector_size)) instead

----------------------------------------------------------------------
GDB
----------------------------------------------------------------------
なし
