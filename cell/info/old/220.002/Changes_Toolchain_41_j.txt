[SCE CONFIDENTIAL DOCUMENT]
PLAYSTATION(R)3 Programmer Tool Toolchain 220.002
                    Copyright(C) 2008 Sony Computer Entertainment Inc.
                                                  All Rights Reserved.
======================================================================
以下にPLAYSTATION(R)3 Reference Tool ツールチェーンパッケージの変更点と
不具合修正を記述します。

- Release 220.002 の変更点
- Release 220.002 の不具合修正

======================================================================
Release 220.002 の変更点
----------------------------------------------------------------------
SN Systems社製リンカ
----------------------------------------------------------------------
(B#45334)
- PRXプログラムを生成する際に "ppu-lv2-prx-fixup --stub-fix-only" を
  呼び出す工程を、SNリンカへ統合しました。この変更によりリンク時間の
  向上が見込めます。
  また、この変更に伴い、次のスイッチを新規追加しました。

  '--prx-fixup'
    リンカにて上記の工程を行います。このスイッチはデフォルトで
    有効です。一方、'--no-prx-fixup' を指定した場合、その工程が
    行われません。

  '-external-prx-fixup'
    リンカの内部で上記の工程を行わずに、"ppu-lv2-prx-fixup --stub-fix-only"
    呼び出します。

- 複数のTOC領域（サイズが64KBよりも大きいTOC領域）の存在を許容するか
  どうかを指定する為、'--no-multi-toc', '--multi-toc' スイッチを新規
  追加しました。デフォルトで '--multi-toc' が有効です。
  複数のTOC領域を有効にすると、必要に応じてTOC切り替え用のリンケージ
  コードを動的に生成します。一方、無効にすると、64KBよりも大きいTOC
  データが存在する場合、エラーが発生します。
   
[仕様変更]

- サポートされない形式のファイルが渡された場合、不可解な syntax error
  を出力することがありましたが、警告を出力するように変更しました。

(B#45256)
- '--print-toc-info' スイッチで生成されるTOCレポートを改善して、ELF
  内部のTOC割り当てを知るために有用な診断を取得できるようにしました。
  レポートには次の３つの項目から構成されます。

   "TOC Module Sizes"
     それぞれのモジュールを、そのモジュールが含むTOCの総量
     とともに表示します。

   "TOC Assignments"
     それぞれのモジュール内部における各セクションのTOC割り
     当てや、その割り当てによるTOCを跨ぐ関数呼び出しを表示
     します。

   "TOC Stats"
     TOC領域、そのサイズ、およびアドレスの一覧を表示します。

(B#43750)
- GCC が、セクション内リロケーション情報を使用して .opd セクションへ
  アクセスする方法に関する知識を使うことにより、dead stripper を改善
  しました。

- '--gc-sections' スイッチを使用する際、リンカが警告を出力するととも
  に、'--strip-unused-data' を自動で有効にするように変更しました。

- .toc セクションの特別な strip 処理と、それを無効にする
  '--no-toc-optimize' スイッチを新規追加しました。

- 標準リンカスクリプトによってインクルードされるライブラリが、コマンド
  ラインにも指定された場合、コマンドラインでの指定を無視するように変更
  しました。この変更により、ライブラリをサーチする順序が原因で
  "undefined symbols" エラーが発生する不具合を解消しました。

----------------------------------------------------------------------
GCC
----------------------------------------------------------------------
<PPU/SPU共通>

(B#45003)
- GCC 4.0.2 とのソースコード互換性を向上させるコンパイルオプション
  '-fsource-402' を新規追加しました。

  詳細は、次のドキュメントの内容を参照して下さい。

  「Cell OS Lv-2 ツールチェーン ユーザガイド」
    - GCC 4.1.1 へのアップグレード
     - 移行に関しての戦略

(B#45188)
- テンプレートクラスにおいてメソッドの名前参照ルールを制御するコンパイ
  ラオプション '-fkoenig-argument-lookup' を新規追加しました。

(B#45259)
- テンプレートクラスにおいて非依存の名前解決を制御するコンパイラオプ
  ション '-fresolve-non-dependent-early' を新規追加しました。

(B#45739)
- 第二引数にアラインメントを指定する operator new の動作を制御するため
  のコンパイラオプション '-fglobal-new-align=<number>' を新規追加しま
  した。

<PPU>

(B#45857)
- PRX を作成する際の新規オプション `-mprx-with-runtime' を追加しました。
  `-mprx' の代わりにこのオプションを用いることによって、以下の機能が
  有効になります。
    - グローバルコンストラクタ/グローバルデストラクタの実行
    - atexit() を用いた関数の登録と、登録された関数の実行
  詳しくは「Cell OS Lv-2 PRX プログラミングガイド」を参照して下さい。

<SPU>

(B#37238)
- リンカオプションに '-fpic' または '-fPIC' を指定した場合、PICではな
  いオブジェクトファイルがリンクされたときに警告を出力するようにしまし
  た。
  なお、この警告は、'-mno-warn-reloc' または '-mspurs-job-initialize'
  と併用した場合には出力されません。

[仕様変更]

<PPU/SPU共通>

(B#45196)
- コンパイラオプション '-fpermissive' を指定した場合、POD (Plain-Old-Data)
  の初期化がブロック境界を越えるgoto文で飛び越される場合に、エラーでは
  なく警告を出力するように変更しました。

(B#46158)
- 次の警告が出力されないように変更しました。
  "no newline at the end of the file"

(B#46095)
- コンパイラからソースファイルを参照できなかった場合、エラーメッセージ
  にコマンドの名前を含むようにしました。

(B#46714)
- コンパイラオプション '-ftree-loop-linear' をサポートしないように変更
  しました。このオプションが指定された場合は、警告を出力します。
  警告を抑制する場合は、'-Wno-tree-loop-linear' オプションを指定してく
  ださい。

<PPU>

(B#40578)
- __vector float 型のオペランドに対して割り算を行うとき、インライン版
  の divf4() を使用するように変更しました。

(B#44267)
- コンパイラドライバを変更して、デフォルトで暗黙に '-lsyscall' オプショ
  ンをリンカに渡すようにしました。
  libsyscall.a ライブラリは、インラインされていないシステムコールを定義
  します。

(B#46894)
- SNリンカにおいて、PRXの後処理用のコマンドである ppu-lv2-prx-fixup を
  起動することなく最終的なELFファイルを生成するように変更したため、GCC
  のコンパイラドライバからSNリンカを起動する際に、その機能を利用するよ
  うにしました。
  なお、以前と同様にSNリンカの処理後に ppu-lv2-prx-fixup を起動する場合
  には、リンカオプションとして '-mforce-prx-fixup' を指定してください。

<SPU>

(B#42132)
- 512バイト以上のオフセットを持つグローバルオブジェクトに対してロード・
  ストアする際に、ilhu命令やiohl命令でアドレスを計算するコードが生成さ
  れていましたが、lqr命令 または stqr命令 を生成するように変更しました。

 例)
 -- プログラム ---
  int array[256];
  int f (void)
  {
    return array[128];
  }

 -- アセンブリコード(修正前) ---
  f:
        ilhu    $2,array+512@h
        iohl    $2,array+512@l
        lqd     $3,0($2)
        rotqby  $3,$3,$2
        bi      $lr

 -- アセンブリコード(修正後) ---
  f:
        lqr     $3,array+512
        bi      $lr

(B#44162)
- コンパイラオプションの指定によって、次のマクロが定義されるように変更
  しました。

  __SPURS_TASK__ : '-mspurs-task' を指定した場合

  __SPURS_JOB__  : '-mspurs-job' または '-mspurs-job-initialize'
                   を指定した場合

  Note:
  SDKに含まれるいくつかのヘッダファイルにおいて、SPURSタスク向けの関数
  に対して __SPURS_JOB__ マクロを参照する箇所があります。
  このため、SPURSタスク向けにSPUプログラムをコンパイルする場合は、
  '-mspurs-task' オプションを指定して再コンパイルしてください。


======================================================================
Release 220.002 の不具合修正
----------------------------------------------------------------------
SN Systems社製リンカ
----------------------------------------------------------------------
- ProDG デバッガの OML(Object Module Loading) のサポートを改善する為、
  Map ファイルレポートを変更しました。OMLは、ワイルドカードに一致する
  名前を配置する箇所に、実際の入力セクション名が必要です。

(B#41203)
- リンカから未定義シンボルのエラーを２回報告することがあった不具合を
  修正しました。

----------------------------------------------------------------------
GCC
----------------------------------------------------------------------
<PPU/SPU共通>

(B#42348)
- Windows において、環境変数 'LANG' または 'LC_ALL' が 'ja_JP.*' に
  設定されていた場合、以下のコマンドがハングしていた不具合を修正しま
  した。

    ppu-lv2-addr2line, spu-lv2-addr2line,
    ppu-lv2-ar,        spu-lv2-ar,
    ppu-lv2-nm,        spu-lv2-nm,
    ppu-lv2-objcopy,   spu-lv2-objcopy,
    ppu-lv2-objdump,   spu-lv2-objdump,
    ppu-lv2-ranlib,    spu-lv2-ranlib,
    ppu-lv2-readelf,   spu-lv2-readelf,
    ppu-lv2-size,      spu-lv2-size,
    ppu-lv2-strings,   spu-lv2-strings,
    ppu-lv2-strip,     spu-lv2-strip

(B#44331)
- アラインメントの情報を正しく処理できず、バイト単位のコピーを行う命令
  が生成される場合があった不具合を修正しました。

(B#42650)
- ppu-lv2-objdump と spu-lv2-objdump コマンドから、正しい DWARF 情報に
  対しても警告メッセージが出力されていた不具合を修正しました。

(B#39027)
- Windows において、複数の gcc が同時に動いている場合に競合状態が発生
  していた不具合を修正しました。

(B#45257)
- 空のクラスのアライメント属性が派生クラスに引き継がれていなかった不具
  合を修正しました。

(B#45656)
- ベクトル型のデバッグ情報に 'DW_TAG_subrange_type' が存在しない場合が
  あった不具合を修正しました。

(B#45741)
- alloca または VLA(可変長配列) の使用時、ローカル変数のデバッグ情報が
  間違っている場合があった不具合を修正しました。

(B#43402)
- typedef でアラインメント属性を使用しており、かつ、その typedef 型を
  使って配列を宣言した場合に、その配列にアクセスするために生成される
  コードが誤っていることがあった不具合を修正しました。

(B#43368)
- -MMDオプションを使って存在しないファイルをインクルードしようとすると、
  警告メッセージではなく、エラーが生成されるように修正しました。

(B#46157)
- 揮発性のロードがループ内で無視される場合がある不具合を修正しました。

(B#46200)
- ベクトル変数のエレメントにアクセスしようとすると、次の internal
  compiler error が発生することがある不具合を修正しました。

  "xxxx.c: xx: internal compiler error: verify_stmts failed"

(B#46459)
- 次のような internal compiler error がまれに発生することがあった不具合
  を修正しました。

  "xxxx.c: xx: internal compiler error: in avail_expr_eq, at tree-ssa-dom.c:3401"

(B#46961)
- "too short to be a PCH file（PCH ファイルとしては短すぎる）" という
  警告メッセージについて、他のPCHの警告と同様に '-Winvalid-PCH' オプ
  ションを指定した場合のみ表示するように修正しました。

(B#47102)
- テンプレートの宣言に 'always_inline' 属性を指定していない場合、テンプ
  レートの定義に 'always_inline' 属性を指定しても適用されなかった不具合
  を修正しました。

(B#47224)
- ループ内で異なるベクトル型間のキャストを行うコードに対して、次の
  internal compiler error が発生することがあった不具合を修正しました。

 "xxxx.c: xx: internal compiler error: in extract_insn, at recog.c:2087"

(B#47903)
- -fpch-depsオプションが正しく動作していなかった不具合を修正しました。
  コンパイルされるソースファイルが、プリコンパイルヘッダの存在するヘッ
  ダをインクルードする場合、生成される.dファイルにはプリコンパイルヘッ
  ダはリストされますが、そのヘッダがインクルードするヘッダはリストされ
  ない、という不具合がありました。このため、ProDG VSI(Visual Studio
  Integration)における依存関係チェックが働かなくなっていました。

<PPU>

(B#44482)
- 'vec_lvrx' と 'vec_lvlx' の 組み込み関数が、その読み込み元であるスト
  アをまたいで移動される場合があった不具合を修正しました。

(B#38847)
- コンパイラがデバッグ情報を重複して生成することがあった不具合を修正し
  ました。

(B#45941)
- グローバル変数に対するベクトルのロードとストアが、誤ったアドレスに
  行われることがあった不具合を修正しました。

(B#20191)
- '-fthreadsafe-statics' オプションが使用できるようになりました。この
  オプションを指定した場合、コンストラクタの静的局所変数がスレッドセー
  フになります。

(B#46231)
- ループ内で誤ったインデックスを使用するコードが生成されることがある、
  という不具合を修正しました。

<SPU>

(B#45189)
- 'lqd' と 'stqd' の命令において定数オフセットとして範囲外のシンボルが
  使用されている場合、リンカからエラーを出力するように修正しました。

(B#30183)
- 位置独立コード（PIC）生成時のスタティックコンストラクタとデトラクタ
  に関する警告について、正確な行番号を表示すように修正しました。

(B#46928)
- spurs_task.o 内部のエントリポイントにおいて、スタックポインタを初期化
  する前にスタックフレームにアクセスしていた不具合を修正しました。

(B#47718)
- GCC 4.1.1 で作成したオブジェクトを GCC 4.0.2 のリンカでリンクした際に、
  リロケーションを正しく解決できない問題を修正しました。

(B#44162)
- abort()を呼び出すソースコードを '-mspurs-task' オプションを指定して
  リンクすると、リンク時に _exit が未定義シンボルとして報告される不具合
  を修正しました。
