[SCE CONFIDENTIAL DOCUMENT]
PLAYSTATION(R)3 Programmer Tool Runtime Library 220.002
                    Copyright(C) 2008 Sony Computer Entertainment Inc.
                                                   All Rights Reserved.
======================================================================
New features, Chages and Notes of the Reference Tool SDK package 
are as follows.

----------------------------------------------------------------------
1 New Libraries and Tools 
----------------------------------------------------------------------
Home Utility
============
This is a system utility to obtain a directory path to cooperate
with PLAYSTATION(R)Home.
As for the details, please see the Home Utility Reference document,
to be released soon. 

Game Content Utility
====================
This is a system utility to obtain (the following) game information:
- Boot information of a game 
- Information of a game disc 
- Information of HDD boot game 
- Information of game data 
As for details, please see the "Game Content Utility Overview" and
the "Game Content Utility Reference" documents, to be released
separately soon. 

Video Upload Utility
====================
This is a system utility to provide a feature of uploading video files,
specified by game applications, to a video-sharing site. 
Currently, the videos are uploaded to a video- sharing site, YouTube. 
As for details, please see the "Video Upload Utility Overview" and
the "Video Upload Utility Reference" documents.

libfiber
========
This is a library to realize "fiber", a non-preemptive user-level thread,
on PPU thread. 
As for details, please see the "libfiber Overview" and the
"libfiber Reference" documents. 

----------------------------------------------------------------------
2 System Software (GUI)
----------------------------------------------------------------------
New Features

- A USB mass storage, inserted into the Reference Tool or the
  Debugging Station, has been added to ordinary output destinations of
  a core file, which is generated by the core dump feature. To specify
  a USB mass storage for the output destination of the core file,
  please select "On (Save to /dev_usb)" from Settings -> Debug Settings
  -> Core Dump menu on System Software. 
- The following menus have been added to the System Software: 
  As for details, please see the "System Software Overview" document.
  - Settings -> Remote Play Settings -> Audio Output Settings 
      This sets the audio output destination (PSP(TM) or PS3(TM)) in
      remote play. 
      If PS3(TM) is selected, it is set as is set in the Settings
      -> Sound Settings -> Audio Output Settings menu. 
  - Settings -> Debug Settings -> Display HDD Free Space
      This is a feature to display the free space of the hard disc drive
      even when a game application is being processed. 
  - Settings -> Debug Settings -> Fake Free Space
      This is a feature to virtually change the free space of the
      hard disc drive. 
  - Settings -> Debug Settings -> Fake Limit Size
      This is also used for Fake Free Space feature. 
  - Settings -> Debug Settings -> Video Upload Debug
      An item that sets the debug feature of the video upload utility
      has been added.
      When this is set to ON, an uploaded video will be forcibly set
      to private. Please refer to the "Video Upload Utility Overview"
      document for more details. 
- Along with addition of the game content utility, the following menus
  have been added to the System Software. 
  The information obtained using the boot information acquisition feature
  can be set from these menus. 
  As for details, please see the "Game Content Utility Overview" and the
  "Game Content Utility Reference" documents, to be released separately soon. 
  - Settings -> Debug Settings -> Game Type (Debugger) 
      Accordingly to the Game Type to be set, the game completing behavior
      varies as below at disc ejection. 
      [Disc Boot Game] 
        Issue a game termination event that is invoked by disc ejection.
      [HDD Boot Game]
        Not issue a game termination event that is invoked by disc ejection.
      [Patch]
        Issue a game termination event that is invoked by a disc eject 
  - Settings -> Debug Settings -> GameContentUtil Boot Path (Debugger)
  - Settings -> Debug Settings -> GameContentUtil dirName (Debugger)
  - Settings -> Debug Settings -> GameContentUtil Boot Path (/app_home/PS3_GAME/)

Specification Changes

- The size of the main memory, used by the System Software, has been reduced.
  Along with this change, the main memory size, available for a game application,
  has also been modified as below: 
  - Console mode : 211MB -> 213MB
  - Tool mode : 405MB -> 407MB
- The size of the video memory, used by the System Software, has been reduced.
  Along with this change, the video memory size, available for a game
  application, has also been modified as below: 
  - Console mode and Tool mode : 242MB ->249MB
- From the Check menu in the Game column, all the files that are contained
  in the USRDIR directory can be checked for the following contents:
  - Disc boot game
  - HDD boot game
  - Game data
- The test, to be done at Settings -> Network Settings -> Internet Connection
  Test menu of System Software, has been modified to also see if a rooter,
  which supports IP fragment packets, is used or not. If this test fails,
  the following message appears: 
  - The router in use may not support IP fragments, and the communication
    features of some games may be restricted. For details, contact the router
    manufacturer.
- As for all the system utilities, the timing to return the ownership of input
  device from the system to a game, has been changed as below: 
  (Ordinary specification)
  - The ownership is returned when all the buttons, not only circle, eks,
    triangle, square, Start, Select buttons but also analog stick and L2/R2,
    are in the neutral state. 
  (Specification in SDK220 and later)
  - The ownership is returned when circle, eks, triangle, square, Start and
    Select buttons are in the neutral state. 
    By this change, the ownership of the input device is immediately retuned
    to the game, even when the system utility is closed with the analog stick
    and directional keys in the pressed state.

----------------------------------------------------------------------
3 libsysmodule
----------------------------------------------------------------------
New Feature

- IDs that load a module have been added: 
  -------------------------------------------------------------------
  ID                                  Description
  -------------------------------------------------------------------
  CELL_SYSMODULE_SYSUTIL_GAME         Gamer Contents Utility
  CELL_SYSMODULE_FREETYPE_TT          libfont 
                                      (FreeType2 library with only TrueType)
  CELL_SYSMODULE_SYSUTIL_VIDEO_UPLOAD Video Upload Utility
  CELL_SYSMODULE_SYSUTIL_SYSCONF_EXT  Feature expansion of the system
                                      configuration dialog utility(for
                                      obtaining the Bluetooth(R) device
                                      information registered to the system)
  CELL_SYSMODULE_FIBER                libfiber
  CELL_SYSMODULE_ADEC_M4AAC           libadec(MPEG4 AAC Decoder)
  -------------------------------------------------------------------

----------------------------------------------------------------------
4 PRX
----------------------------------------------------------------------
New Feature

- A long with the start entry function and the stop function, you can
  now add an EXIT entry function. The EXIT entry function is called by
  the system when it is returned from main() or when the process is
  terminated by exit().
- PRX runtime library has been added. 
  This library is to implicitly perform global construction, global
  destruction and destruction of static object in the PRX module. 
  Also, by linking the PRX runtime library to game applications, atexit()
  becomes available in the PRX module. To link the PRX runtime library to
  game applications, please specify the -mprx-with-runtime option at
  compiling. 

Sample Change (cell/samples/sdk/prx/weak-c)

- The specification of the -mprx option of ppu-lv2-gcc has been modified,
  and along with this change, the cross-reference part of the generated
  stub can no more be written on the project file. 
  Thus, the project file for Visual Studio 2003 has been deleted. 

----------------------------------------------------------------------
5 System Utility (libsysutil)
----------------------------------------------------------------------
System Configuration Dialog Utility
===================================
New Features

- To the macros to specify the first argument "type" of cellSysconfOpen(),
  the followings have been added. 
  By this change, you can now open the Voice Changer dialog and the Manage
  Bluetooth(R) Devices dialog as a system configuration dialog.
  -------------------------------------------------------------------
  Macros                                      Values 
  -------------------------------------------------------------------
  CELL_SYSCONF_TYPE_VOICE_CHANGER             2
  CELL_SYSCONF_TYPE_BLUETOOTH_DEVICE_UTILITY  3
  -------------------------------------------------------------------

- cellSysconfBtGetDeviceList() has been added to obtain Bluetooth(R)
  device information, which is registered to the system. 
  Along with this change, the following files have been added: 
  - cell/target/ppu/lib/libsysutil_sysconf_ext_stub.a
  - cell/target/ppu/include/sysutil/sysutil_sysconf_ext.h

Specification Change

- cellSysconfOpen() has been modified so as to be performed without using
  a memory container. For the argument "containerId" of each function,
  please specify SYS_MEMORY_CONTAINER_ID_INVALID. Also, for the fifth
  argument "id" of cellSysconfOpen(), please specify
  SYS_MEMORY_CONTAINER_ID_INVALID. 
  Along with this change, the definition of CELL_SYSCONF_MEMORY_CONTAINER_SIZE
  has been deleted from the cell/target/ppu/include/sysutil/sysutil_sysconf.h. 

Sample Changes (cell/samples/sdk/sysutil/sysconf)

- The code to create/destroy a memory container has been deleted and
  a modification has been made so as to specify SYS_MEMORY_CONTAINER_ID_INVALID
  for the fifth argument "container" of cellSysconfOpen().
- The sample has been modified to display Audio Device Settings,
  Voice Changer and Management Bluetooth(R) Devices in the menu of the sample's
  top page. Now you can select the system configuration dialog to execute. 
- A menu has been added to use cellSysconfAbort() for a test with timeout setting.
- A menu has been added to display the result of cellSysconfBtGetDeviceList()
  on the UI.
- The source code of the sample has been divided to facilitate visualization. 
  Along with this change, the Makefile has been updated. 

Game Data Utility
=================
Specification Change
- cellGameDataCheckCreate2() has been modified so as to be performed without
  using a memory container. For the argument "container" of each function,
  please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  By this change, the definition of CELL_GAMEDATA_MEMORY_CONTAINER_SIZE has
  been deleted from the cell/target/ppu/include/sysutil/sysutil_gamedata.h. 

Sample Change (cell/samples/sdk/sysutil/gamedata)

- The code to create/destroy a memory container has been deleted,
  and the sample has been modified to specify SYS_MEMORY_CONTAINER_ID_INVALID
  for the fifth argument "container" of cellGameDataCheckCreate2().

Save Data Utility
=================
New Features

- The following functions have been added to access the save data of specified
  user ID and to delete it: 
  - cellSaveDataUserListDelete()   [Execution of delete save data from
                                    a narrowed-down list]
  - cellSaveDataUserFixedDelete()  [Execution of fixed delete save data]

Specification Changes

- In order to reduce the memory, specification of save data thumbnail,
  displayed by the following functions, has been modified as below: 
  The save data thumbnail is "decoded at resolution 320x176 and then
  displayed after properly scaling down." -> "decoded at resolution 160x88
  and then displayed after properly scaling down/up" 
  - cellSaveDataListSave2(), cellSaveDataListLoad2(), cellSaveDataDelete2(),
  - cellSaveDataListDelete(), cellSaveDataListImport(),
    cellSaveDataListExport(),
  - cellSaveDataFixedImport(), cellSaveDataFixedExport(),
  - cellSaveDataUserListSave(), cellSaveDataUserListLoad(),
    cellSaveDataUserListDelete(),
  - cellSaveDataUserListImport(), cellSaveDataUserListExport(),
  - cellSaveDataUserFixedImport(), cellSaveDataUserFixedExport()
- In addition to the switching feature of showing/hiding the confirmation
  dialog, the timing to call the processing completion callback function
  (CellSaveDataDoneCallback()), which notifies the completion of deleting
  save data in cellSaveDataFixedDelete() and cellSaveDataListDelete(),
  has been modified as below: 
  <Before >
    - CellSaveDataDoneCallback() is called immediately after the confirmation
      dialog of "Delete completed" is closed by a user.
  <SDK220 and Later >
    - CellSaveDataDoneCallback() is called just before the confirmation
      dialog of "Delete completed" is displayed.
- All the functions of the save data utility has been modified to be performed
  without using a memory container. For the argument "container" of each
  function, please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  Along with this change, the following macro definitions have been deleted
  from the cell/target/ppu/include/sysutil/sysutil_savedata.h. 
  - CELL_SAVEDATA_AUTO_MEMORY_CONTAINER_SIZE
  - CELL_SAVEDATA_FIXED_MEMORY_CONTAINER_SIZE
  - CELL_SAVEDATA_LIST_MEMORY_CONTAINER_SIZE
  - CELL_SAVEDATA_COPY_MEMORY_CONTAINER_SIZE
- The following, which was once announced as a known bug in the SDK210,
  has become the official specification. 
  - As for the strings, displayed beside the thumbnail of listed data by
    cellSaveDataListDelete(), "title" is displayed when "*" is specified
    for dirNamePrefix while "subtitle" is displayed when the others are
    specified. This is the right behavior, but in the SDK210, "title" was
    displayed in all cases. 

Sample Changes (cell/sdk/samples/sdk/sysutil/savedata)

- In all the samples of save data, the code to create/destroy memory container
  has been deleted, and a modification has been made so as to specify
  SYS_MEMORY_CONTAINER_ID_INVALID for the functions argument "container". 
- In the basic sample, the code has been divided to facilitate visualization. 
  Along with this change, the Makefile and the project file of ProDG for
  PLAYSTATION(R)3 have been updated. 
- In the user sample, cellSaveDataUserListDelete() and
  cellSaveDataUserFixedDelete() usage have been added. Also, the source code
  of the sample has been divided to facilitate visualization. 
  Along with this change, the Makefile and the project file of ProDG for
  PLAYSTATION(R)3 have been updated. 

Storage Data Utility
====================
Specification Change 

- All the functions of the storage data utility have been modified to be
  performed without using a memory container. For the argument "container"
  of each function, please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  Along with this change, the macro definition of
  CELL_STORAGEDATA_MEMORY_CONTAINER_SIZE has been deleted from the
  cell/target/ppu/include/sysutil/sysutil_storagedata.h. 

Sample Change (cell/samples/sdk/sysutil/storagedata)

- The code to create/destroy memory container has been deleted,
  and a modification has been made so as to specify
  SYS_MEMORY_CONTAINER_ID_INVALID for the argument "container" of
  the storage data utility functions. 

Music Utility
=============
New Features 

- A replaying function without using a memory container has been added. 
  The usage and the feature of this function is almost same as that of
  ordinary replaying functions, except memory container is not used. 
  However, note that there are some restrictions on the audio data to
  be replayed: 
  - Format: ATRAC(TM)(.oma, .aa3), AAC(.3gp, .mp4), MP3(.mp3)
  - Sampling rate: 44.1kHz, 22.05kHz, 48kHz
- cellMusicExportInitialize2() has been added to initialize the exporting
  feature which does not use a memory container. 

Specification Change 

- cellMusicSelectContents() has been modified to be performed without using
  a memory container. For the argument "container" of each function,
  please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  Along with this change, the memory container with 5MB is no more necessary
  for using cellMusicSelectContents. 

Sample Change (cell/samples/sdk/sysutil/music)

- The code to create/destroy memory container has been deleted and
  a modification has been made so as to specify SYS_MEMORY_CONTAINER_ID_INVALID
  for the argument "container" of cellMusicSelectContents().

Video Utility
=============
New Features 

- cellVideoExportInitialize2() function has been added to initialize
  the video utility, which does not use a memory container. 
- A modification has been made so as to export a video file with 2GByte
  or more.

Sample Change (cell/samples/sdk/sysutil/video_export)

- The code to create/destroy memory container has been deleted and
  a modification has been made so as to use cellVideoExportInitialize2()
  to initialize the video utility.

Photo Utility
=============
New features 

- cellPhotoExportInitialize2() has been added to initialize the exporting
  feature of the photo utility without using a memory container. 
- cellPhotoImport2() has been added to display the photo selection screen
  and to import photo files without using a memory container.
- cellPhotoDecodeInitialize2() has been added to initialize the decoding
  feature of the photo utility without using a memory container. 

Sample Change(cell/samples/sdk/sysutil/photo)

- The code to create/destroy memory container has been deleted,
  and a modification has been made so as to use the newly-added functions below: 
  - cellPhotoExportInitialize2()
  - cellPhotoImport2()
  - cellPhotoDecodeInitialize2()

Print Utility
=============
New Feature 

- cellPrintLoadAsync2() has been added to load the print utility without
  using a memory container. 

Specification Change 

- The ordinary function cellPrintLoadAsync() has been abolished to load
  the print utility. 
  To load the print utility, please use the newly-added cellPrintLoadAsync2().
  Also note that the usage/feature of cellPrintLoadAsync2() is same as that
  of ordinary cellPrintLoadAsync(), except for the following points: 
  - cellPrintLoadAsync2() does not use a memory container.
  - Unlike with cellPrintLoadAsync(), cellPrintLoadAsync2() can't be used
    with the message dialog utility which accepts user input. 
  Along with these changes, the macro definition of
  CELL_PRINT_MEMORY_CONTAINER_SIZE has been deleted from the
  cell/target/ppu/include/sysutil/sysutil_print.h. 

Sample Change (cell/sdk/samples/sdk/sysutil/print)

- The code to create/destroy memory container has been deleted, and
  a modification has been made so as to use cellPrintLoadAsync2().
- A modification has been made so as not to use the message dialog utility
  and the printer utility simultaneously. 

AV Chat 2 Utility
=================
New Feature

- The AV Chat 2 Utility is now available without using the
  NP Matching 2 Utility.
  If you are not using the NP Matching 2 Utility, please set the IP addresses
  and port numbers of participants explicitly. 

Specification Change

- cellSysutilAvc2Load() has been modified to be performed without using
  a memory container. For the second argument "container" of
  cellSysutilAvc2Load(), please specify SYS_MEMORY_CONTAINER_ID_INVALID. 

Recording Utility
=================
New Features

- CELL_REC_PARAM_AUDIO_FMT_YOUTUBE has been added as a macro to be set for
  the member "audioFmt" of the CellRecParam structure. 
  When this macro is specified, the audio format is set to MPEG2-AAC, 48KHz
  and 64Kbps. These settings are optimum for uploading movies to the movie
  site, using the video upload utility. To create movie data to upload,
  please use CELL_REC_PARAM_AUDIO_FMT_YOUTUBE.
- CELL_REC_PARAM_VIDEO_FMT_YOUTUBE has been added as a macro to be set for
  the "videoFmt" member of the CellRecParam structure. 
  When this macro is specified, the video format is set to MPEG-4, 320x240,
  768Kbps and 30fps. These settings a re optimum for uploading videos to
  the video site, using the video upload utility. To create movie data to
  upload, please use CELL_REC_PARAM_VIDEO_FMT_YOUTUBE. 

Sample Change (cell/samples/sdk/sysutil/recording)

- A modification has been made so as to specify
  CELL_REC_PARAM_AUDIO_FMT_YOUTUBE for the audioFmt member of the CellRecParam
  structure. 

User Information Utility
========================
Specification Changes

- The following functions have been modified to be performed without using
  a memory container. For the argument "container" of each function,
  please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  - cellUserInfoSelectUser_SetList()
  - cellUserInfoSelectUser_ListType()
  By this change, the macro definition of CELL_USERINFO_MEMORY_CONTAINER_SIZE
  has been deleted from the cell/target/ppu/include/sysutil/sysutil_userinfo.h. 
- To reduce the memory, specification of the user list thumbnail, displayed
  by the following functions, has been modified as below:
  displaying non-compressed images  -> displaying DXT-compressed images
  - cellUserInfoSelectUser_SetList()
  - cellUserInfoSelectUser_ListType()

Sample Changes (cell/samples/sdk/sysutil/userinfo)

- The code to create/destroy memory container has been deleted, and
  a modification has been made so as to specify SYS_MEMORY_CONTAINER_ID_INVALID
  for the argument "container" of the user information utility function. 
- A process has been added to set the initial focus onto any user when
  cellUserInfoSelectUser_ListType() is called and the user list is opened. 

On-screen Keyboard Dialog Utility
=================================
New Features

- The following features have been added to control all the device events
  that are received by the On-screen Keyboard Dialog. 
  - cellOskDialogExtInputDeviceLock() has been added to ignore all the
  device events, received by the On-screen Keyboard Dialog. 
  - cellOskDialogExtInputDeviceUnlock() has been added to unlock the ignorance
    of device events. 
  - cellOskDialogExtSendFinishMessage() has been added to forcibly terminate
    user's input. Along with this change, the enum values have been added
    as below: 
  - CELL_OSKDIALOG_CLOSE_CONFIRM  : forcibly confirm and close
  - CELL_OSKDIALOG_CLOSE_CANCEL  : forcibly cancel and close

Specification Change

- cellOskDialogLoadAsync() has been modified to be performed without using
  a memory container. For the first argument "container" of
  cellOskDialogLoadAsync(), please specify SYS_MEMORY_CONTAINER_ID_INVALID. 

Sample Changes (cell/samples/sdk/sysutil/osk_dialog)

- The code to create/destroy a memory container has been deleted,
  and the sample has been modified to specify SYS_MEMORY_CONTAINER_ID_INVALID
  for the first argument "container" of cellOskDialogLoadAsync().
- The sample has been modified to use the newly-added functions as below: 
  - cellOskDialogExtInputDeviceLock()
  - cellOskDialogExtInputDeviceUnlock()
  - cellOskDialogExtSendFinishMessage()

Content Search Utility
======================
Specification Change

- cellSearchInitialize() has been modified to be performed without using
  a memory container. For the second argument "container" of
  cellSearchInitialize(), please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  Along with this change, the definition of CELL_SEARCH_MEMORY_CONTAINER_SIZE
  has been deleted from the cell/target/ppu/include/sysutil/sysutil_search.h. 

Sample Change (cell/samples/sdk/sysutil/search)

- The code to create/destroy a memory container has been deleted,
  and the sample has been modified to specify SYS_MEMORY_CONTAINER_ID_INVALID
  for the second argument "container" of cellSearchInitialize().

Subdisplay Utility
==================
New Features

- cellSubDisplayAudioOutNonBlocking() function has been added not to block
  but to set audio data to be forwarded to PSP(TM)(PlayStation(R)Portable).
- CELL_SUBDISPLAY_VIDEO_FORMAT_R8G8B8A8 has been added to the drawing format
  of entry data, which is set with the "format" member of the
  CellSubDisplayVideoParam structure.
- A modification has been made so as to set 480x4 pitch size using the "pitch"
  member of the CellSubDisplayVideoParam structure.

Remote Play Utility
===================
New Feature

- You can now set the output destination of audio in remote play. 
  Settings -> Remote Play Settings -> Audio Output Settings 
  If PS3(TM) is selected, it is set as is set in the Settings -> Sound Settings
  -> Audio Output Settings menu. 

ImeJp Utility
=============
Specification Changes

- cellImeJpOpen() and cellImeJpOpen2() have been modified to be performed
  without using a memory container. For the first argument "container_id"
  of cellImeJpOpen() and cellImeJpOpen2(), please specify
  SYS_MEMORY_CONTAINER_ID_INVALID. 
- However in the future, the cellImeJpOpen() may be deleted due to inferior
  performance in predicted conversion speed to the cellImeJpOpen2().
  If you use the cellImeJpOpen(), please migrate to the cellImeJpOpen2().

Sample Changes (cell/samples/sdk/sysutil/imejp)

- A modification has been made to use cellImeJpOpen2(),
  instead of cellImeJpOpen().
- Create/destroy process of memory container has been deleted. 

HDD Boot Game Utility
=====================
Specification Change

- cellHddGameCheck() has been modified to be performed without using
  a memory container. For the fifth argument "container" of cellHddGameCheck(),
  please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  Along with this change, the definition of CELL_HDDGAME_MEMORY_CONTAINER_SIZE
  has been deleted from the nclude/sysutil/sysutil_hddgame.h. 

Sample Change (cell/samples/sdk/sysutil/hddgame)

- The code to create/destroy memory container has been deleted, and the sample
  has been modified to specify SYS_MEMORY_CONTAINER_ID_INVALID for the fifth
  argument "container" of cellHddGameCheck().

Game Update Utility
===================
New Feature 
- Difference patch packages are now supported. 

Specification Change

- cellGameUpdateCheckStartAsync() has been modified so as to be performed
  without using a memory container.
  Please specify SYS_MEMORY_CONTAINER_ID_INVALID for the member "cid" of
  the CellGameUpdateParam structure, which is pointed by the first argument
  "param" of cellGameUpdateCheckStartAsync(). Along with this change,
  the definition of CELL_GAMEUPDATE_MEMORY_CONTAINER_SIZE has been deleted
  from the cell/target/ppu/include/sysutil/sysutil_gameupdate.h.

Sample Changes (cell/samples/sdk/sysutil/)

- The code to create/destroy memory container has been deleted from
  the gameupdate sample. Also, a modification has been made so as to specify
  SYS_MEMORY_CONTAINER_ID_INVALID for the member "cid" of the
  CellGameUpdateParam structure, which is passed to the first argument "param"
  of cellGameUpdateCheckStartAsync().
- In the samples below, a difference patch package has been added to contain
  patches from 1.10 to 1.20. Along with this, the structure of these samples
  have been modified. 
  - cell/samples/sdk/sysutil/gameupdate/
  - cell/samples/sdk/sysutil/gameupdate_system

Monitor Settings Utility (setmonitor.self)
==========================================
Specification Change 

- How to boot setmonitor.self has been changed and now ProDG Target Manager
  for PLAYSTATION(R)3 is used for booting it. 

----------------------------------------------------------------------
6 Cell OS Lv-2
----------------------------------------------------------------------
New Features

- The following features have been added to the virtual memory: 
  - When the physical memory size is specified for 64KB page by
    sys_vm_memory_map(), the memory can be handled by 64KB now. 
  - A modification has been made so as to allocate the physical memory
    for the specified sub-region, and a fixed function sys_vm_lock()
    has been added. 
  - sys_vm_unlock() has been added to de-allocate the physical memory to
    be fixed by sys_vm_lock().
  - The following functions have been added to operate the page of
    specified sub-area: 
      sys_vm_touch()
      sys_vm_flush()
      sys_vm_store()
      sys_vm_invalidate()
      sys_vm_sync()
  - sys_vm_get_statistics() function and sys_vm_statistics_t structure
    have been added to obtain statistics of the virtual memory. 
    The statistics (see the followings) which can be obtained with
    sys_vm_get_statistics() is stored in the sys_vm_statistics_t structure.
    Number of page fault 
    Page in
    Number of page out
    The amount of physical memory area, to be given to the virtual memory
    The value of time base at calling sys_vm_get_statistics()
- The following functions have been modified to support a lightweight
  condition variable: By specifying SYS_LWCOND_OBJECT for the first argument
  "object" of the function, you can now obtain the number of lightweight
  condition variables and IDs. 
  - sys_process_get_number_of_object()
  - sys_process_get_id()

Specification Change 

- The termination process of the C/C++ Standard libraries and the PRX
  module has been modified. 
  (Specification of SDK 210 and before)
    - If there exist PRX modules in loading/starting state when the system
      returns from main() or the process is terminated by exit(), the stop
      entry function of the PRX module is called. 
  (Specification after SDK 220)
    - If there exist PRX modules in loading/starting state when the system
      returns from main() or the process is terminated by exit(), EXIT entry
      function (#1) of the PRX module is called. Also if the PRX module is
      linked to the PRX runtime library (#1), The PRX runtime library is
      terminated just after the EXIT entry function (#1) is called. 
      (#1):  This is a new feature, which has been added to the PRX since SDK220. 
             As for details, please see the New Features of PRX in chapter
             "libsysmodule".
- The declaration of the system-calling function has been modified to
  extern inline. Also, cell/target/ppu/lib/libsyscall.a has been added. 

Sample Change (cell/samples/sdk/lv2)

- Along with abolishment of using memory container in some system utilities
  (libsysutil), the sample of cell/samples/sdk/lv2/vm_and_savedata has
  been abolished. 

----------------------------------------------------------------------
7 C/C++ Standard Library 
----------------------------------------------------------------------
New Features

<PPU>
- The functions which are related to memory management for PPU can now
  be replaced. See "C and C++ Standard Libraries Overview and Reference"
  Appendix F for details.
- exitspawn() and _Exitspawn() have been added to stdlib.h to generate
  a new game process. 
  The exitspawn() is almost equal to the sys_game_process_exitspawn2(),
  which is provided as a Cell OS Lv-2 function, except for the type of
  argv argument and envp argument.

Specification Changes

<PPU>
- The specification of _Exit() is changed so that the global destructors
  will not be invoked.
- It is now possible to use atexit() from PRX. See "C and C++ Standard
  Libraries Overview and Reference" and "Cell OS Lv-2 PRX Programming Guide"
  for details.
- Behavior of the following functions has been modified. 
  For implementation reasons, the behavior to a certain inputs may be
  different from general math functions. 
  - atan2f4()
  - atanf4()
  - cbrtf4()
  - divf4()
  - fmodf4()
  - hypotf4()
  - logf4()
  - log1pf4()
  - log2f4()
  - log10f4()
  - logbf4()
  - powf4()
  - recipf4()
  - remainderf4()
  - rsqrtf4()
  - sqrtf4()
  Relating to the functions above, the details of the functions below are
  also added: There is no change in these functions behavior.
  - atanf4fast()
  - divf4fast()
  - recipf4fast()
  - rsqrtf4fast()
  - sqrtf4fast()
  Details are as below: 
  Here, x and y are the elements of the first and the second arguments. 
  - atan2f4()
    If x and y are 0, the result is undefined. 
    When y is 0, the result is pi/2 with the sign of x. 
    When y is -Inf, the result is pi with the sign of x
    When y is +Inf, the result is 0 with the sign of x. 
    If either input is NaN, the result is NaN.
  - atanf4() and atanf4fast()
    [Common specification]
      When x is +-Inf, the result is pi/2 with the sign of x. 
      When x is NaN, the result is NaN.
    [Additional specification of atanf4()]
      When x is 0,the result is 0 with the sign of x.
    [Additional specification of atanf4fast()]
      When x is 0,the result is 0.
  - cbrtf4()
    when x is 0,the result is 0 with the sign of x.
    when x is NaN, the result is NaN.
  - divf4() and divf4fast()
    [Common specification]
      If either input is NaN, the result is NaN.
      For Inf/Inf or 0/0, the result is NaN.
      For finite/0, the result is Inf with sign = sign(x)/sign(y).
      When |y| > 2^126, y is treated as +-Inf.
    [Additional specification of divf4()]
      For finite/+-Inf, the result is 0 with sign = sign(x)/sign(y).
   [Additional specification of divf4fast()]
      For +-0/finite, the result is 0.
      For finite/+-Inf, the result is 0.
  - fmodf4()
    When x or y is 0,the result is 0.
  - hypotf4()
    If either input is NaN, the result is NaN.
    If either input is +-Inf, the result is Inf.
  - logf4()
    When x is +-0,the result is -Inf.
    When x is +Inf,the result is +Inf.
    When x is NaN,the result is NaN.
    When x < 0,the result is undefined.
  - log1pf4()
    When x is +-0,the result is -Inf. 
    When x is +Inf,the result is +Inf. 
    When x is NaN,the result is NaN. 
    When x < 0,the result is undefined.
  - log2f4()
    When x is 0,the result is -Inf. 
    When x is +Inf,the result is +Inf. 
    When x is NaN,the result is NaN. 
    When x < 0,the result is undefined.
  - log10f4()
    When x is +-0,the result is -Inf. 
    When x is +Inf,the result is +Inf. 
    When x is NaN,the result is NaN. 
    When x < 0,the result is undefined.
  - logbf4()
    When x is +-0,the result is -Inf. 
    When x is +-Inf,the result is +Inf. 
    When x is Nan,the result is NaN.
  - powf4()
    When x is 1, the result is 1. 
    When y is 0, the result is 1.
  - recipf4() and recipf4fast()
    When x is 0, the result is Inf with the sign of x. 
    When x is +-Inf, the result is 0 with the sign of x. 
    When |x| > 2^126, the result is 0 with the sign of x. 
    When x is NaN, the result is NaN.
  - remainderf4()
    When x or y is 0,the result is 0.
  - rsqrtf4() and rsqrtf4fast()
    When x < 0,the result is NaN. 
    When x is +Inf,the result is +0. 
    When x is 0,the result is Inf with the sign of x. 
    When x is NaN,the result is NaN
  - sqrtf4() and sqrtf4fast()
    [Common specification] 
      When x < 0,the result is NaN. 
      When x is NaN,the result is NaN. 
   [Additional specification of sqrtf4()]
      When x is +Inf,the result is +Inf. 
      When x is 0,the result is 0 with the sign of x. 
    [Additional specification of sqrtf4fast()]
      When x is +Inf,the result is NaN. 
      When x is 0,the result is +0.
<SPU>
- Most of the functions in headers ctype.h, math.h, and string.h and some
  functions in stdlib.h are defined as inline.
  If a program, which uses these functions, was compiled without
  optimization(-O0), the code size increased a lot.
  However in the SDK220, a modification has been made so that they are not
  inlined if no optimization is specified.

----------------------------------------------------------------------
8 libdbg
----------------------------------------------------------------------
New Feature

- Functions to obtain call stack information have been added as below:
  - cellDbgPpuThreadCountStackFrames()
  - cellDbgPpuThreadGetStackBackTrace()

----------------------------------------------------------------------
9 liblv2dbg
----------------------------------------------------------------------
New Features

- sys_dbg_get_lwcond_information() function has been added to obtain
  information about lightweight condition variable. 
- The following functions have been added to enable/disable program
  interrupt by a floating point enabled exception. Also, the floating
  point enabled exception can be detected as a cause of PPU exception
  using exception handling thread of liblv2dbg. 
  - sys_dbg_enable_floating_point_enabled_exception()
  - sys_dbg_disable_floating_point_enabled_exception()
- sys_dbg_vm_get_page_information() has been added to obtain the
  state of virtual memory area. 

----------------------------------------------------------------------
10 GPIO System Calls
----------------------------------------------------------------------
New Feature

- A foot switch event, triggered when the foot switch is pressed,
  can be obtained now. Along with this change, the following header file
  has been added: 
  - cell/target/ppuvinclude/sys/fsw.h

Sample Change (cell/samples/sdk/dbg/gpio)

- Specification of the sample has been modified so as to perform LED
  and DIP switch operations just after the foot switch events are
  obtained 3 times. Along with this change, the file has been renamed
  as below: 
  (Before) cell/samples/sdk/dbg/gpio/led_dipswitch.c
  (After) cell/samples/sdk/dbg/gpio/gpio.c

----------------------------------------------------------------------
11 dt command (cell/host-win32[host-linux]/bin)
----------------------------------------------------------------------
New Feature

- To the dtnetm command, -m and -b options have been added so as to support
  the Wake On Lan of the Debugging Station. 
  $ dtnetm -p <port> -d <ip> -m <mac> -b <broadcast>
  <mac>        : MAC address of the Debugging Station (xx:xx:xx:xx:xx:xx)
  <broadcast>  : Broadcast address of the Debugging Station (xxx.xxx.xxx.xxx)
  As for settings on the Debugging Station side, please navigate to the
  "Settings"-> "Debug Settings" -> "Wake On LAN" menu on the
  system software and then set "On". 

----------------------------------------------------------------------
12 SPU Runtime
----------------------------------------------------------------------
libdma
======
New Features 

- The following functions have been added to transfer the data of any
  size to the main storage: 
  - cellDmaUnalignedPut()
  - cellDmaUnalignedPutf()
  - cellDmaUnalignedPutb()

- The following functions have been added to transfer the data of any
  size to the LS:. 
  - cellDmaUnalignedGet()
  - cellDmaUnalignedGetf()
  - cellDmaUnalignedGetb()

libspurs
========
<Common >
New Features 

- A modification has been made so as to output the SPURS core dump to
  a USB mass storage. 

Changes in Simple SPURS Utility (cell/samples/common/spurs)

- A modification has been made to use
  cellSpursAttributeEnableSpuPrintfIfAvailable().
  By this change, spu_printf becomes available automatically by settings
  when spu_printf_intialize() is being performed.
- An interface for SPURS job has been added. 
  Along with this, descriptions about the interface for the SPURS job
  has been added to the "Easy SPURS Overview" and the "Easy SPURS Reference"
  documents, provided below: 
  cell/samples/common/spurs/doc/Easy_SPURS-Overview_*.pdf
  cell/samples/common/spurs/doc/Easy_SPURS-Reference_*.pdf

Specification Changes 

- From the following ELF files, the path and text information,
  which is unnecessary for debugging, has been deleted: 
  - cell/target/images/spurs_kernel.elf
  - cell/target/images/spurs_ss.elf
  - cell//target/images/spurs_tm.elf
  - cell/target/images/spurs_jm1.elf
  - cell/target/images/spurs_jm2.elf

<Core>
New Features 

- cellSpursGetSpuGuid() function has been added to get the SPU GUID value,
  which exists in the specified address. 
- cellSpursSetGlobalExceptionEventHandler() has been added to register the SPU
  exception event handler, which is effective for all the workloads.  

< SPURS Job>

New Features 

- The macro definition of the workload class name of job chain has been added:
  - Job chain:  CELL_SPURS_JOBCHAIN_CLASS_NAME
- cellSpursJobGetInputDataElements() has been added to obtain the pointer size
  of input data on the local storage, which corresponds to the list element of
  input/output DMA list from the SPURS job. 
- cellSpursJobSetMaxGrab() has been added to change the maximum grab
  number(maxGrabbedJob) of job chain in process.
- cellSpursGetJobPipelineInfo() has been added to obtain pipeline information
  of the job streamer, which is being processed on the SPU thread. 

Specification Changes 

- In the urgent commands of the SPURS job (Urgent Job List Call),
  the order of the job process has been modified to FIFO.
- The policy modules of the SPURS job (cell/target/images/spurs_jm.elf)
  have been divided as below: 
  - cell/target/images/spurs_jm1.elf   for cellSpursJob1.0 
  - cell/target/images/spurs_jm2.elf   for cellSpursJob2.0 

<Tasks>
New Features 

- The macro definition of workload class name of a task set has been added:
  - Task set:  CELL_SPURS_TASKSET_CLASS_NAME
- cellSpursGetTasksetInfo() has been extended so as to obtain task's SPU GUID,
  belonging to the task set. Along with this change, "guid" member of the
  CellSpursTaskInfo structure, to be included as a member in the
  CellSpursTasksetInfo structure, which is pointed by the argument "info",
  has been added. In the "guid" member, the SPU GUID value of the task ,
  which belongs to the task set, is stored. 

Specification Changes 

- The error handling for invalid LS pattern has been modified,
  that is performed when a synchronous function, which brings a possibility
  that the SPURS task may fall in a waiting status, is called. 
  (SDK210 and Before)
    - CELL_SPURS_TASK_ERROR_STAT is returned and fall into an unrecoverable state
  (After SDK220)
    - For a recoverable error, CELL_SPURS_TASK_ERROR_STAT is returned. 
    - For an unrecoverable error, CELL_SPURS_TASK_ERROR_FATAL is returned. 

----------------------------------------------------------------------
13 File Systems
----------------------------------------------------------------------
New Features 

- In the FAT file system, a modification has been made so that the files,
  on the USB memory which is connected to the Hardware Tool and on the
  USB hard disc drive, could be handled. 
  This feature is available in the Hardware Tool only as well as
  Memory Stick(TM). 
- The following functions have been added to set the memory area(IO buffer)
  for Read/Write of the specified file descriptor: 
  - cellFsSetIoBuffer()
  - cellFsSetIoBufferFromDefaultContainer()
  Also, cellFsSetDefaultContainer() has been newly added to set the default
  memory container to be used for the new function
  cellFsSetIoBufferFromDefaultContainer().

----------------------------------------------------------------------
14 Network
----------------------------------------------------------------------
libnet
======
New Feature

- SYS_NET_SOCKINFO_EX_PCBTABLES has been added as a value to be specified
  for the second argument "flags" of sys_net_get_sockinfo_ex().
  When SYS_NET_SOCKINFO_EX_PCBTABLES is specified for the flags, information
  about protocol control block is obtained. 
  For example, information about the TCP connection, which is waiting for
  timeout after TCP socket is closed, can be referred. 

Specification Change

- To TCP over UDPP2P, a modification has been made so as to reduce unnecessary
  memory consumption. By this change, when a connection established by
  NP signaling utility is cut, the connection is re  set that communicates
  with the pear. 

Sample Change (cell/samples/sdk/network/net/util)

- The sample has been modified so as to specify SYS_NET_SOCKINFO_EX_PCBTABLES
  for the second argument "flag" of sys_net_get_sockinfo_ex(),
  used in the netstat.c.

libnetctl
=========
Specification Change

- cellNetCtlNetStartDialogLoadAsync() has been modified so as to start
  the network start dialog utility without using a memory container. 
  Along with this change, the member "cid" of CellNetCtlNetStartDialogParam
  structure, to be specified as an argument of
  cellNetCtlNetStartDialogLoadAsync(), will be unused member. 
  However, the compatibility with ordinary CellNetCtlNetStartDialogParam
  structure is maintained since this is a specification change in which
  the value is not changed on the library side even when the memory container
  ID is specified. 

Sample Change (cell/samples/sdk/network/net)

- The code to create/destroy memory container has been deleted. 

----------------------------------------------------------------------
15 Network Platform (NP)
----------------------------------------------------------------------
NP Basic Utility
================
Specification Changes

- The following functions, which send messages/requests with GUI,
  have been modified to be performed without using a memory container.
  For the argument "containerId" of each function, please specify
  SYS_MEMORY_CONTAINER_ID_INVALID. 
  - sceNpBasicSendMessageGui() 
  - sceNpBasicAddFriend() 
  - sceNpBasicSendMessageAttachment()
  Along with this change, the following definitions have been deleted from
  the cell/target/ppu/include/np/basic.h. 
  - SCE_NP_BASIC_MEMORY_CONTAINER_SIZE
  - SCE_NP_BASIC_SEND_MESSAGE_MEMORY_CONTAINER_SIZE
- The following functions, which receive an attached data with GUI in
  a message, have been modified to be performed without using a memory
  container. For the argument "containerId" of each function,
  please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  - sceNpBasicRecvMessageAttachment() 
  - sceNpBasicRecvMessageCustom()
  Along with this change, the following variable definitions have been
  deleted from the cell/target/ppu/include/np/basic.h.
  - SCE_NP_BASIC_MEMORY_CONTAINER_SIZE
  - SCE_NP_BASIC_RECV_MESSAGE_MEMORY_CONTAINER_SIZE

Sample Changes (cell/samples/sdk/network/np)

- The following functions of each sample have been modified so as to specify
  SYS_MEMORY_CONTAINER_ID_INVALID for the argument "containerId". 
  - sceNpBasicSendMessageGui() 
  - sceNpBasicAddFriend() 
  - sceNpBasicSendMessageAttachment()
  - sceNpBasicRecvMessageAttachment() 
  - sceNpBasicRecvMessageCustom()

NP Matching Utility
===================
Specification Changes

- In the SDK 220, a cleanup feature has been added to remove zombie rooms
  that accidentally occurred at some time and remained there long.
  By this change, the zombie rooms are to be deleted automatically after
  a certain period of time. Also, note calling specific APIs from
  an application is unnecessary since the cleanup starts automatically. 
- The following functions to send /receive invitation messages (with GUI)
  have been modified so as to be performed without using a memory container
  by specifying SYS_MEMORY_CONTAINER_ID_INVALID for the argument "container". 
  - sceNpMatchingSendInvitationGUI()
  - sceNpMatchingAcceptInvitationGUI()

Sample Changes (cell/samples/sdk/network/np/np_gui)

- The code to create/destroy memory container has been deleted.
- The following functions, which send/receive an invitation message with GUI,
  have been modified to be performed without using a memory container.
  For the argument "containerId",
  please specify SYS_MEMORY_CONTAINER_ID_INVALID. 
  - sceNpMatchingSendInvitationGUI()
  - sceNpMatchingAcceptInvitationGUI()

NP Matching 2 Utility
=====================
New Feature

- sceNpMatching2SignalingGetPingInfo() has been added to obtain QoS
  information (RTT for room owner by Ping). 

NP Signaling Utility
====================
New Feature

- A feature has been added to reset TCP over UDPP2P connection,
  in case connection becomes INACTIVE (there's no connection). 

Specification Changes

- The NAT check tool (cell/target/images/nat_checker.self) has been
  modified as below: 
  - STUN Status is now displayed to show if check by STUN is successfully done.
    The value of STUN Status corresponds to the value of "stun_staus" member
    of NAT rooter information structure CellNetCtlNatInfo which is obtained
    with cellNetCtlGetNatInfo().
  - Filtering Behavior/Hairpin Behavior tests have been abolished. 
  - When UPnP is successfully done, the corresponding port numbers are
    now displayed. 

NP Friend List Utility
======================
Specification Change

- The size of memory container,
  defined as SCE_NP_FRIENDLIST_MEMORY_CONTAINER_SIZE has been changed to
  7MB from 12MB. 

NP Score Ranking Utility
========================
Sample Changes (cell/sdk/network/np/npclient)

- In the ranking mode, the ranking information is now merged and displayed
  while it is registered and actually reflected on the server. 

NP DRM Utility
==============
Specification Change

- The format of NPDRM EDATA is now version 2. 
  When you perform make_edata_npdrm command, NPDRM EDATA of version 2 is
  created. 
  Also, if you perform make_edata_npdrm command with --format1 option,
  NPDRM EDATA of version 1 is created. However, please try to migrate it
  to use the version 2 on game applications. 
- Decryption processing, to be done before reading NPDRM EDATA,
  is now performed by SPU, instead of ordinary PPU.
  As for creating procedure and usage of NPDRM EDATA data, there's no change. 
- In sceNpDrmProcessExitSpawn2(), the specification of terminating a process
  has been changed. 
  In the ordinary spec, a process equivalent to exit(0) was done when
  the process is terminated. However, this has changed to perform a process
  which is equivalent to _Exit(0), by specifying the Logical OR of
  SCE_NP_DRM_EXITSPAWN2_EXIT_WO_FINI for the eighth argument "flags".
  Sample Changes (cell/samples/sdk/network/np/)
- Along with specification change in memory container in game data utility,
  the sample has been modified so as to specify SYS_MEMORY_CONTAINER_ID_INVALID
  for the fifth argument "container" of cellGameDataCheckCreate2() used
  in the np_drm_edata sample. 
- Along with specification change in memory container in HDD boot game utility,
  the sample has been modified so as to specify SYS_MEMORY_CONTAINER_ID_INVALID
  for the fifth argument "container" of cellHddGameCheck() used in
  the hddgame sample. 

NP Clan Utility
===============
New Features

- To the Bulletin Board (Announcement), you can now attach binary data.
  Please specify a pointer of binary data for the forth argument "data" of
  sceNpClansPostAnnouncement(). 
- The following functions have been added to automatically authenticate
  clan members. 
  - sceNpClansUpdateAutoAcceptStatus()
  - sceNpClansGetAutoAcceptStatus()
- A Challenge Board (Clan Challenge) has been newly-created that non-clan
  members can write in. 
  The Clan Challenge is a message board to be shared among different clans.
  This can be used by clan leaders/subleaders to ask player-vs.-player game
  play. Along with this change, the following functions have been added: 
  - sceNpClansPostChallenge()
  - sceNpClansRetrievePostedChallenges()
  - sceNpClansRemovePostedChallenge()
  - sceNpClansRetrieveChallenges()
  - sceNpClansRemoveChallenge()
- In Vulgarity Filter check by PLAYSTATION(R)Network server, error used to be
  returned for inappropriate strings found in clan messages.
  This has been modified to display "*" for the inappropriate strings.
  To display "*", please set SCE_NP_CLANS_MESSAGE_OPTIONS_CENSOR macro for
  SceNpClansMessage structure member "options". 

----------------------------------------------------------------------
16 libusbd
----------------------------------------------------------------------
New Feature

- The following functions have been added to reserve/free memory.
  - cellUsbdAllocateMemory()
  - cellUsbdFreeMemory()
  Also, if you specify the memory which is reserved by cellUsbdAllocateMemory()
  as a data transfer buffer, data can be transferred without being copied
  inside libusbd. This can reduce PPU load. 

----------------------------------------------------------------------
17 HID
----------------------------------------------------------------------
libpad
======
New Features 

- A cellPadGetInfo2() function and CellPadGetInfo2 structure have been
  added to obtain the controller information collectively.
  They are the renewed function/structure from the cellPadGetInfo() and
  the CellPadInfo so that they can obtain the controller information
  more easily. 
  The difference in specification between the new cellPadGetInfo2() and
  the ordinary cellPadGetInfo() are as below: 
  1.Using the cellPadGetInfo2(), notification of the changed
    controller port No. can be obtained now. 
    - (Before)
        There was no way to know the changes in the controller port No.
        by the system dialog etc. 
    - (In SDK220 and Later)
        If you call cellPadGetInfo2() after the controller port No.
        is changed by the system dialog etc., you can get the result via
        the port_status[i] member of the CellPadInfo2 structure,
        specified for the argument. As for the changes in the port No.,
        you can check by the value in the CELL_PAD_STATUS_ASSIGN_CHANGES
        field for the port_status[i]. 
  2.Setting information about the pressure-sensitivity mode and the six-axis
    sensor mode is now available. 
    - (Before)
        There was no way to obtain the information about the controller port,
        set by cellPadSetPressMode and cellPadSetSensorMode().
    - (In SDK220 and Later)
        Information about the controller port, set by cellPadSetPressMode()
        and cellPadSetSensorMode() is now available by cellPadGetInfo2().
        The setting information of the controller port is stored in the
        port_setting member of the CellPadInfo2 structure, set as an argument. 
  3.Information about the performance of connected controller is now available.
    - (Before)
        In order to obtain the performance information about the controller
        (if it has pressure-sensitivity or six-axis sensor features),
        you had to call cellPadGetCapabilityInfo().
    - (In SDK220 and Later)
        By calling cellPadGetInfo2(), you can obtain the performance
        information about the controller via the device_capability member
        of the CellPadInfo2 structure, set as an argument. 
  4.Abolishment of vender ID and product ID
    - (Before)
        The vender ID/product ID were included in the information about
        the structure CellPadInfo, which is specified as an argument of
        cellPadGetInfo(), however identifying the controller from these
        IDs were prohibited. 
    - (In SDK220 and Later)
        The vender ID/product ID are not included in the structure
        CellPadInfo2, which is specified as an argument of cellPadGetInfo2().
        Instead, you can identify the controller using the device_capability
        member of the CellPadInfo2 structure. 
  - Also, the following functions and the structure are to be abolished.
    In game applications, please use cellPadGetInfo2() and CellPadInfo2
    structure for migration. 
    Functions 
      - cellPadGetInfo()
      - cellPadInfoPressMode()
      - cellPadInfoSensorMode()
      - cellPadGetCapabilityInfo()
    Structure 
      - CellPadInfo
- cellPadSetPortSetting() function has been added to set the port mode. 
  This function enables you to set the pressure-sensitivity feature or
  sensor mode collectively, that were set with cellPadSetPressMode() and
  cellPadSetSensorMode() before. 
  Also, cellPadSetPressMode() and cellPadSetSensorMode() are to be abolished
  in the future. In game applications, please use cellPadSetPortSetting()
  for migration. 
- Functions to use the virtual controller for debugging have been added:
  These functions are development use only, such as automation of performance
  test etc., and are provided as a stub library libdbg_libio_stub.a,
  separated from libio_stub.a. Also note that the libdbg_libio_stub.a can not
  be used for a game application to be submitted as a master. 
  - Function to register virtual controller for debugging 
    cellPadDbgLddRegisterController()
  - Function to control the button data filter of the virtual controller
    for debugging. 
    cellPadDbgLddSetDataInsertMode()

Sample Change (cell/samples/sdk/hid)

- From the pad and combine samples, the descriptions of functions and
  structures to be abolished have been deleted to replace with new functions
  and structures. 
  
libpad for Windows
==================
New Feature 

- To the wireless controller driver configuration tool
  (cell/host-win32/bin/sixaxistool.exe), a feature to clear the pairing
  between the SIXAXIS(TM) wireless controller and the DUALSHOCK(R)3 wireless
  controller. 
  To clear the pairing, please boot the wireless controller driver
  configuration tool and then right-click the wireless controller driver
  configuration tool icon, which is in the task tray. Next,
  please select the "Clear Paring" to place a check mark. If you do not
  clear the pairing, this is not checked. 

----------------------------------------------------------------------
18 libmic
----------------------------------------------------------------------
New Feature

- cellMicSetNotifyEventQueue2() has been added to set an event queue,
  which receives event notifications regarding audio input. 

Sample Changes (cell/samples/sdk/mic/multimics)

- Thread structure of single microphone has been improved to control
  multiple-microphone.
- A code has been added to display the following processing more effectively.
  - Re-sampling from sampling rate 32K to 48k
  - Re-sampling form sampling rate 16K to 48k

----------------------------------------------------------------------
19 libcamera
----------------------------------------------------------------------
New Features

- cellCameraSetNotifyEventQueue2() has been added to set an event queue
  for notifying a n event relating to the camera input. 
  By setting the event queue for camera event notification,
  you can specify the import name. Also, you can receive it as an event
  when the frame is updated.
- cellCameraRemoveNotifyEventQueue2() has been added to free the event
  queue for camera input notification. 

----------------------------------------------------------------------
20 libfont
----------------------------------------------------------------------
New Features

- A compact version of FreeType module, CELL_SYSMODULE_FREETYPE_TT,
  has been added. Note this module is available only when you use the
  system installed fonts and the TrueType fonts.
  To use this module, please be linked to the libfreetypeTT_stub.a before
  loading CELL_SYSMODULE_FREETYPE_TT. 
  If you use the compact version of FreeType module, you can save
  the memory by about 384KB from the ordinary FreeType2 font interface
  (CELL_SYSMODULE_FREETYPE load by libfreetype_stub.a link). 
- The following functions have been added to partially control
  the opening operation of the fonts. 
  - cellFontSetFontsetOpenMode() (for the system installed fonts)
  - cellFontSetFontOpenMode()    (for the external fonts)
  In these functions, the metrics information for vertical processing,
  included in Kanji-area fonts of etc., can be ignored. If this is ignored,
  the resident memory can be reduced that is necessary for opening
  the system installed fonts. 

Sample Change(cell/samples/sdk/font/fw_cubeWithFont)

- In the Makefile, the link order to the libraries has been modified
  accordingly to the actual dependency on the libraries. 
  - (Before) PPU_LDLIBS+= -lfont_stub -lfontFT_stub -lfreetype_stub -lfs_stub
  - (After) PU_LDLIBS+= -lfontFT_stub -lfreetype_stub -lfont_stub -lfs_stub

----------------------------------------------------------------------
21 libdbgfont
----------------------------------------------------------------------
New Features

- The following macros have been added to the libraries for libgcm: 
  - CELL_DBGFONT_MINFILTER_NEAREST
  - CELL_DBGFONT_MINFILTER_LINEAR
  - CELL_DBGFONT_MAGFILTER_NEAREST
  - CELL_DBGFONT_MAGFILTER_LINEAR
  By specifying them for the "option" member of the CellDbgFontConfigGcm
  structure, you can change the texture filter type to be used for
  drawing fonts.

Sample Change (cell/samples/sdk/graphics/dbgfont/simple_console_gcm)

- Along with additional macros, a modification has been made so as to
  explicitly specify CELL_DBGFONT_MINFILTER_NEAREST for the reduction
  filter and CELL_DBGFONT_MINFILTER_NEAREST for the enlargement filter
  respectively. 
----------------------------------------------------------------------
22 libresc
----------------------------------------------------------------------
Sample Change (cell/samples/sdk/graphics/resc/combination)

- In the ordinary sample, if a combination of invalid values was set,
  "assert" appeared to forcibly terminate the program. 
  This specification has been changed so that the combination of invalid
  values can not be selected from the menu.
  Now, if the invalid combinations are used, a "WARNING" appears 
  on the screen to output the details onto the TTY.  

  (Example)  
    For the video output mode 576i/p: cellRescSetDisplayMode(CELL_RESC_720x576); 
    If the result in the Chart below is "NG", the combination of the enum 
    is that of invalid values.

    ------------------------------------------------------------------------
    CellRescInitConfig.palTemporalMode   CellRescInitConfig.flipMode  Result
    ------------------------------------------------------------------------
    CELL_RESC_PAL_50                     CELL_RESC_DISPLAY_VSYNC      OK

    CELL_RESC_PAL_60_DROP                CELL_RESC_DISPLAY_VSYNC      OK 

    CELL_RESC_PAL_60_INTERPOLATE         CELL_RESC_DISPLAY_VSYNC      OK 

    CELL_RESC_PAL_60_INTERPOLATE_30_DROP CELL_RESC_DISPLAY_VSYNC      OK 

    CELL_RESC_PAL_60_INTERPOLATE
    _DROP_FLEXIBLE                       CELL_RESC_DISPLAY_VSYNC      OK 

    CELL_RESC_PAL_60_FOR_HSYNC           CELL_RESC_DISPLAY_VSYNC      NG

    CELL_RESC_PAL_50                     CELL_RESC_DISPLAY_HSYNC      OK

    CELL_RESC_PAL_60_DROP                CELL_RESC_DISPLAY_HSYNC      NG

    CELL_RESC_PAL_60_INTERPOLATE         CELL_RESC_DISPLAY_HSYNC      NG 

    CELL_RESC_PAL_60_INTERPOLATE_30_DROP CELL_RESC_DISPLAY_HSYNC      NG 

    CELL_RESC_PAL_60_INTERPOLATE
    _DROP_FLEXIBLE                       CELL_RESC_DISPLAY_HSYNC      NG 

    CELL_RESC_PAL_60_FOR_HSYNC           CELL_RESC_DISPLAY_HSYNC      OK
    ------------------------------------------------------------------------

- The menus of fade-in, fade-out and border characters etc. have been modified 
  to facilitate visibility. Also the processing timing to operate the menus 
  has been improved.

- In the movie of the menu of the sample, a modification has been made 
  so as to display a warning when there is no bitstream.m2v file. 

----------------------------------------------------------------------
23 sce-cgc
----------------------------------------------------------------------
New Features

- sce-cgc disasm has been modified so as to interpret fragment programs 
  which use FACE semantics. 

- The texture format could be set with the command line option. 
  This has been modified so as to be set even in the source code by pragma. 

  (Example) In the source of game applications, pragma is set as below:  
       #pragma texformat default <format> 
       #pragma texformat d <format> 
       #pragma texformat <sampler name> <format>

  Also, note that the command line option is prioritized to the pragma 
  setting when the command line option is specified. 

----------------------------------------------------------------------
24 NVShaderPerf
----------------------------------------------------------------------
New Feature

- The 2.0 base NVShaderPerf (with installer), which was provided 
  as a separate file, has been updated to be included in the SDK package.
  Along with this change, the 1.1 base NVShaderPerf 
  (without installer/command line version) has been deleted.  

  (Added)  cell/host-win32/Cg/bin/NVShaderPerfInstaller_RSX_2.07.20080130.1430.exe 
  (Deleted)   cell/host-win32/Cg/bin/NVShaderPerf.exe

Specification Change 

- In the output display of the vertex pixel throughput, a modification 
  has been made to insert commas (,) so that the digit numbers would 
  be easy to understand. 

----------------------------------------------------------------------
25 libgcm
----------------------------------------------------------------------
New Features 

- A modification has been made so that the main memory can 
  be specified as a destination of report data writing, which is executed
  by the report command. Along with this change, the following functions
  have been added: 

  - cellGcmSetReportLocation() 
    A function to specify the memory of the report area

  - cellGcmGetReportDataAddressLocation() 
    A function to obtain the address of effective address space of 
    the specified report data

  - cellGcmGetTimeStampLocation() 
    A function to obtain the timestamp in the specified report area

  - cellGcmGetReportDataLocation() 
    A function to obtain the value in the specified report area

- To the cellGcmSetTextureFilter(), cellGcmSetTextureFilterSigned() 
  has been added to specify the ARGB Signed feature. 

- cellGcmSetTextureAddressAnisoBiasRemap() function has been added,
  that was created by adding the argument "signedRemap" to the 
  cellGcmSetTextureAddressAnisoBias().  
  For the argument "signedRemap", you can specify the data remap range
  when using the ARGB Signed feature.

Specification Change 

- The GCM Method Macro, which directly creates RSX(TM) graphics commands,
  is now provided as an official version.  
  If you use the GCM Method Macro in game applications, please contact 
  the technical support.  
  Also please see the "GCM Method Macros Overview" document before using it.  

- The changes from the GCM Method Macro beta version, are as shown below: 

  - A macro has been added to replace the following functions:  
    cellGcmSetDrawIndexArray() 
    cellGcmSetTextureOptimization() 
    cellGcmSetVertexProgramConstants()

  - A macro has been added to create the Method Header

- A modification has been made so as not to generate inline functions 
  in cellGcmFlush() and cellGcmFinish(). If you use the inline function 
  version of libgcm, a code is generated to call library functions, 
  instead of inlining. 

- To cellGcmSetReport() and cellGcmSetTimeStamp() of the library of 
  debugging version (libgcm_cmddbg.a), a modification has been made 
  so as not to check the upper bound of the argument "index" (up to 2048).

  As a destination of report data writing by the report command, 
  the main memory is now available. Thus, the upper bound (2047) check 
  is now unnecessary when the local memory is being used. 

- The maximum number of parallel pixel thread of the fragment program 
  has been modified as below: 

  - If the texture format to refer is not the float type: 468 -> 460 
  - If the texture format to refer is FP16: 234 -> 226 
  - If the texture format to refer is FP32: 117 -> 109 

Sample Change (cell/samples/sdk/graphics/gcm/zcull)

- A modification has been made so as to enhance the display of ZCull 
  reload process. 

----------------------------------------------------------------------
26 libgcm_pm
----------------------------------------------------------------------
New Features 

- The following functions have been added to generate a RSX(TM) marker 
  command and a marker block.  
  To use them, please link to the libgcm_cmd.a or the libgcm_cmddbg.a. 

  - cellGcmSetPerfMonMarker()
  - cellGcmSetPerfMonPushMarker()
  - cellGcmSetPerfMonPopMarker()

Specification Change 

- The CELL_GCM_PM_SCLK_PREROP_VALID_PIXEL event has been renamed to 
  CELL_GCM_PM_SCLK_PREROP_VALID_PACKET, since the event name should 
  point the event counter to be obtained.  
  Also, for compatibility, the definition of 
  CELL_GCM_PM_SCLK_PREROP_VALID_PIXEL is remained in the header file. 

----------------------------------------------------------------------
27 PSGL
----------------------------------------------------------------------
New Features 

- The static command buffer feature has been introduced.  
  By this, the overhead can be reduced in such a case the same objects 
  are repeatedly drawn. Along with the introduction of static command 
  buffer, the following functions have been added: 

  - void psglBeginCommandRecord( void * commandBuffer,GLuint sizeInBytes );
  - void * psglGetCommandRecordCurrent();
  - void * psglEndCommandRecord( bool AddReturn );
  - void psglCallCommandBuffer( void * commandBuffer );
  - void psglPushCommandBuffer( void * commandBuffer, GLuint sizeInBytes ); 
  - void * psglAllocateCommandBuffer( GLuint sizeInBytes, GLuint * offset );
  - PSGL_EXPORT void psglFreeCommandBuffer( void * commandBuffer );
  - PSGL_EXPORT void psglSetRecordOutOfSpaceCallback(psglStaticCommandBufferCallBackcallback);

----------------------------------------------------------------------
28 Sound-related 
----------------------------------------------------------------------
libaudio
========
New Feature 

- The memory to be used by the audio port has been modified as below:  
  cellAudioAdd6chData()

Specification Change 

- The memory to be used by the audio port has been modified as below: 

  (Ordinary Specification)   
    Memory is allocated from a process in which the system is operating. 
  (Specification since SDK220)  
    Memory is allocated from a process in which the game application 
    is operating. 

  Along with this change, on the game application, more memory needs 
  to be allocated than before for the audio port. 
  As for details, please see the cellAudioPortOpen() section in 
  the "libaudio Reference" document.  

  Also the amount of memory to be used per audio port is shown as below: 
    ------------------------------------------------------------
    Number of channel    Number of block       Number of bytes 
                                               to be used
    ------------------------------------------------------------
    CELL_AUDIO_PORT_2CH  CELL_AUDIO_BLOCK_8      64KB
    CELL_AUDIO_PORT_2CH  CELL_AUDIO_BLOCK_16     64KB
    CELL_AUDIO_PORT_8CH  CELL_AUDIO_BLOCK_8      64KB
    CELL_AUDIO_PORT_8CH  CELL_AUDIO_BLOCK_16    128KB
    ------------------------------------------------------------

libmstream
==========
New Feature
 
- cellMSStreamGetMP3FrameInfo() has been added to return the number 
  of MP3 frames processed and the number of bytes processed for those frames. 

- The following sample datas using samples have been added: 

  - cell/sample_data/sound/waveform/saw.wav
  - cell/sample_data/sound/waveform/stick.wav
  - cell/sample_data/sound/waveform/can.wav
  - cell/sample_data/sound/waveform/drill.wav

Specification Change 

- The processing time and used memory for SPU, required for the following 
  DSP effect process, has been reduced. 

  - Filter DSP effect
  - Time Domain Delay DSP effect
  - Time Domain Reverb DSP effect
  - I3DL2 Reverb DSP effect

- The DSP effect *.pic cile has been properly replaced as a PPU object 
  file (*.ppu.o), which is in a format of directly linking to game titles. 

    (Before) cell/target/spu/lib/pic/multistream/
    (After) cell/target/ppu/lib/pic/multistream/

  Also, the cell/target/spu/lib/pic/multistream/ object file (*.ppu.o) is
  maintained for compatibility.  
  As for the usage of this object file (*.ppu.o), please see the samples 
  under the cell/samples/sdk/sound/multistream. 

Sample Changes (cell/samples/sdk/sound/multistream)

- All the samples of multistream have been modified so as to support 
  Visual Studio 2005. 
  Along with this change, a project file for the Visual Studio 2005 
  has been added as below:

  - cell/samples/sdk/sound/multistream/samples-2005.slnsamples-2005.sln

- Unnecessary values have been removed from UpdateKickDrum() of 
  the simple_filter sample. 

- Unnecessary values have been removed from StreamCallback() of 
  the following samples : 

  - imple_envelope
  - simple_eq
  - simple_streaming
  - simple_surround

- Unnecessary values have been removed from ModifyPitch() of 
  the following samples: 

  - simple_timestretch
  - simple_pitchshift

- Unnecessary values have been removed from main() of the simple_reverb_td sample.

- Unnecessary links to the libraries such as libFW and libPSGL 
  and unnecessary descriptions of directories have been removed 
  from the samples. 

- Pre-processing of build, to be done on the project for Visual Studio, 
  has been removed. The relevant samples are as below:  
  Also, if "build all" is performed from samples.sln or samples-2005.sln,
  it automatically builds up. 

  - dsp_sample
  - eq_sample
  - rain_sample
  - simple_created_td
  - simple_created_fd

- The makefile of the surround_sample has bee modified as below:

  (Before Change) 
    build_fw_lib: 
    	make -C "$(CELL_SDK)/samples/fw/" -f Makefile
  (After change) 
     SUBDIRS = $(CELL_FW_DIR)

- The description in the makefile of dsp_sample, eq_sample and 
  rain_sample samples have been modified as below: 

  (Before Change) 
    BASE_CLASS_DIR = ../surround_sample
  (After Change) 
    SUBDIRS = ../surround_sample

libscream
=========
Specification Changes 

- The processing time of cellScreamMSSync() has been reduced. 

Sample Change (cell/samples/sdk/sound/scream)

- In the ordinary sample, the .pic file of DSP effect was embedded
  into the PPU execution file when creating game applications 
  with DSP effect.  
  However, this used to set the data section name, which was not 
  compliant to the TRC, to the execution file. 
  Thus, this has been modified so as to link the PPU object file (*.ppu.o) 
  to the execution file. 

----------------------------------------------------------------------
29 codec
----------------------------------------------------------------------
libadec
=======
New Feature 

- MPEG-4 AAC decoder (Module ID: CELL_SYSMODULE_ADEC_M4AAC) has been 
  added to the libadec module.  
  Along with this, the following sample data has been added:  

  - sample_data/codec/bitstream.aac

libsail
=======
New Features 

- In cellSailGraphicsAdapterSetPreferredFormat(), the setting of video 
  frame width(pitch) of video format is now valid only when the following
  condition is met:

  (Condition)
  - When CELL_SAIL_PARAMETER_ENABLE_VPOST is specified for the second 
    arguement " parameterType" of  cellSailPlayerSetParameter().
   (When filtering process of video with libvpost is enabled.)

- User data of the PAMF file is now available using CellSailAuReceiver.
  Along with this change, the following functions have been added: 

  - cellSailPlayerSetAuReceiver()
  - cellSailAuReceiverInitialize()
  - cellSailAuReceiverFinalize()
  - cellSailAuReceiverGet()

- Replaying DivX(R) file is now supported. Along with this change, 
  the following functions have been added: 

  - cellSailAviMovieGetMovieInfo()
  - cellSailAviMovieGetStreamByIndex()
  - cellSailAviMovieGetStreamByTypeAndIndex()
  - cellSailAviMovieGetHeader()
  - cellSailAviStreamGetMediaType()
  - cellSailAviStreamGetHeader()

Specification Change 
- A modification has been made so as to use cellVdecOpenEx() 
  when libvdec decoder is opened inside the libsail library.
  By this change, the memory to be used by the libsail has been reduced.

- The constants have been renamed to general names so that they could 
  be shared not only in MP4 files but also in AVI files.
  - CELL_SAIL_SEEK_MP4_SCALE_AND_TIME --> CELL_SAIL_SEEK_ABSOLUTE_TIME_POSITION 
  - CELL_SAIL_TERMINUS_MP4_SCALE_AND_TIME --> CELL_SAIL_TERMINUS_ABSOLUTE_TIME_POSITION 

libpamf
=======
New Features 

- cellPamfGetHeaderSize2() is provided as an enhanced version of the 
  cellPamfGetHeaderSize(), which obtains the PAMF header size 
  The cellPamfGetHeaderSize2(), which carries the ordinary feature,
  can also obtain the header size without EP (Entry Point) information,
  by specifying an attribute. By this, if you do not need the EP (Entry Point)
  information, you can reduce the buffer of the PAMF header to be passed
  to the cellPamfReaderInitialize(). 
  Also, the cellPamfGetHeaderSize(), which is available in the SDK220,
  is to be abolished in the next release. 
  In game applications, please use the cellPamfGetHeaderSize2().

- To the deblockingFilterFlag member of the CellPamfAvcInfo structure,
  a modification has been made so as to set a flag to show if deblocking 
  filter is used or not.  
  The setting of the deblockingFilterFlag is shown below: 

    - If not using the deblocking filter: deblockingFilterFlag=0
    - If using the deblocking filter: deblockingFilterFlag=1 

  Using the flag setting, the deblockingFilterFlag member of the CellPamfAvcInfo 
  structure setting and the valid size of the picture frame, you can reduce 
  the memory used by libvdec.  

  As for the details, please see the CellVdecAvcSpecificInfo structure 
  in the "libvdec Reference" document. 

libpngdec
=========
Sample Changes (samples/sdk/codec/png_dec)

- libspurs and libfs are used internally in libpngdec. Thus explicitly 
  loading/unloading PRX modules of libspurs and libfs are unnecessary 
  on game applications.  
  In the following png_dec samples, PRX modules of libfs used to be 
  loaded/ unloaded, so this process has been deleted. 

  - pngdec_ppu
  - pngdec_ppu_callback
  - pngdec_sputhread

libjpgenc
=========
Sample Change (cell/samples/sdk/codec/jpg_enc)

- libjpgenc uses libspurs and libfs internally. Thus explicitly 
  loading/unloading PRX modules of libspurs and libfs are unnecessary 
  on game applications. 
  In the jpg_enc sample, PRX modules of libfs used to be loaded/unloaded,
  so this process has been deleted. 

libjpgdec
=========
Sample Changes (cell/samples/sdk/codec/jpg_dec)

- libjpgdec uses libspurs and libfs internally. Thus explicitly 
  loading/unloading PRX modules of libspurs and libfs are unnecessary 
  on game applications.
  In the jpg_dec samples as below, PRX modules of libfs used to be 
  loaded/ unloaded, so this process has been deleted. 

  - jdec_ppu
  - jdec_ppu_callback
  - jdec_sputhread

libcelpenc
==========
Specification Change

- Memory usage of encoder has been reduced from 181KB to 42KB. 

libatrac3plus
=============
New Features 

- cellAtracCreateDecoderExt() has been added to generate decoder and 
  then to associate with the handle on the sharing SPURS instance environment. 

- cellAtracGetVacantSize() has been added to obtain the free space of 
  the buffer during streaming playback, and to check how many bytes 
  of data should be added. 

----------------------------------------------------------------------
30 Control Console
----------------------------------------------------------------------
New Features 

- The Control Console Client library has been provided along 
  with the source code.  
  As for details, please see the "Control Console Client User Guide" 
  and the "Control Console Client Reference" documents.

  - cell/samples/sdk/control_console/control_console_client_api
    (Configuration under the control_console_client_api)

    C++/ControlConsoleAPI :
      C++ version source code of the Control Console Client API
    C++/Samples/SampleAllControls :
      Samples using the Control Console Client API(C++ version) 
    CSharp/ControlConsoleAPI :
       C# version source code of the Control Console Client API
    CSharp/Samples/SampleAllControls :
       Samples using the Control Console Client API(C# version) 

----------------------------------------------------------------------
31 Physics Effect Samples (cell/samples/tutorial/PhysicsEffects)
----------------------------------------------------------------------
New Features 

- Particle simulations have been added. 

- Multiple water surfaces can now be handled. 

- Water surfaces can be individually configured for position and rotation,
  fixed points of waves, offset heights of waves. 

- Multiple rays can now be handled in groups. 

- A mechanism for correcting shifts in the position of joints 
  has been added. 

- Distance joints, which connect 2 connecting points by ball joint 
  have been added. 

Specification Change 

- The mechanism of contact filter has been modified. 

- Initialization process of ray cast has been modified. 

----------------------------------------------------------------------
32 Sample Programs
----------------------------------------------------------------------
Deleted/Migrated Samples by Completion of Development Environment Support
=========================================================================

As is announced in the Developer Alerts in the PS3 Developer Network 
( https://ps3.scedev.net/technotes/view/681 ), providing 
with Linux/bedbg(gdb) development environment has been completed 
since SDK220 release. 

Along with this change, Linux Native samples, bedbg(gdb) scripts and
the following samples which relates to those scripts have been deleted: 

- samples/sdk/dbg/rawspu
- samples/sdk/network/net/linux/echo_udp_linux
- samples/sdk/network/net/linux/load_test_linux 

Also, the support of the PA Suite, provided via the Performance analyzer tools,
is to be completed at the end of March, 2008. Thus, the following samples,
included in the PLAYSTATION(R)3 Performance analyzer tools package, 
will be migrated into the SDK sample package. 

  (Before Migration)  cell/samples/pa_suite/ControlConsoleSample
  (After Migration)  cell/samples/sdk/control_console/control_console_sample

New Samples 
===========
- samples/sdk/lv2/malloc_replace
  A sample to replace the functions, relating to memory management for PPU

- samples/sdk/lv2/vm_and_webbrowser
  A sample to show a simple usage of virtual memory and how to use physical
  memory temporarily, which is assigned to the virtual memory, as a memory 
  container 

- samples/sdk/dbg/ppu_stack_backtrace
  A sample to show the usage of libdbg to obtain stack back trace of 
  the PPU thread 

- samples/sdk/spu_library/libspurs/advanced/exception_handling/
  A sample to show how to handle SPU exceptions on the user level that 
  occurred on the SPURS job or on the task 

- samples/sdk/codec/atrac3plus_spurs
  Sample for using libatrac3plus on the sharing SPURS instance environment.

- samples/sdk/fiber/hello/
  A sample to show the basic usage of libfiber 

- samples/sdk/fiber/yield/
  A sample to show how the multiple fibers are executed 

- samples/sdk/fiber/multi_worker/
  A sample to show how to execute multiple fibers in parallel 

- samples/sdk/fiber/ppu_context/
  A sample to show how to use the fiber without using the Cell OS Lv-2 scheduler

- samples/sdk/fiber/signal/
  A sample to show how to synchronize the fiber and the SPURS task using 
  Cell OS Lv-2 signal 

- samples/sdk/fiber/flag/
  A sample to show how to synchronize the fiber and the SPURS job using a flag 

- samples/sdk/fiber/advanced/function_offload_tutorial
  Samples to show how to offload/perform on the SPU 

  - There are for samples as below: 
    1_ppu_single_thread
    2_ppu_fiber
    3_offload_to_spu
    4_gather_functions 

  Processes, to be done on the PPU side in the samples, are done 
  on the SPU side. By this, the workload on the PPU can be reduced. 

- samples/sdk/libfs/discfs/change_disc
  A sample to change discs using libfs and disc boot game utility.

- samples/sdk/libfs/general/set_io_buffer
  A sample to show cellFsSetIoBuffer() usage and performance differences.

- samples/sdk/sysutil/gamecontent
  A sample to obtain game boot information, to create game data, 
  and to obtain game information

- samples/sdk/sysutil/video_upload
  A sample to show the basic usage of the video upload utility

- samples/sdk/sysutil/gameexec
  A sample to operate the Home utility, simultaneously with 
  the PLAYSTATION(R)Home, to obtain information relating to 
  the PLAYSTATION(R)Home, based on the screen display program 

- samples/sdk/sysutil/music2
  A sample to show the usage of replaying function, which does not use 
  a memory container of the music utility,
  based on the cell/samples/sdk/graphics/gcm/basic

- samples/sdk/sysutil/subdisplay/boss_button
  A sample to show how to switch the output destination of movie to 
  PSP(TM) (PlayStation(R)Portable) or PLAYSTATION(R)3 using subdisplay utility 

- samples/sdk/sysutil/subdisplay/small_footprint
  A sample to replay individual streams on both PSP(TM)(PlayStation(R)Portable) 
  and  PLAYSTATION(R)3 using subdisplay utility 

- samples/sdk/sysutil/avc2/voicechat_direct
  A sample to do voice chat processing using the direct-streaming mode of
  the AV chat2 utility.

- samples/sdk/network/np/np_matching2/np_matching2_clan
  A sample to show how to use clan lobby, using NP matching 2 utility 
  This demonstrates how to join a clan and how to obtain Lobby IDs assigned 
  to the joining clan. 

- samples/sdk/camera/frame_update
  A sample to show the basic way to switch the behavior accordingly to 
  the notified event, using cellCameraSetNotifyEventQueue2()

- samples/sdk/graphics/psgl/Advanced/StaticCommandBuffer_01
  A sample to show the usage of the static command buffer feature

- samples/sdk/graphics/psgl/Advanced/StaticCommandBuffer_02
  A sample to show the usage of the static command buffer feature

- samples/sdk/graphics/gcm/report_to_main_memory
  Sample to show how to use the following features
    - Writing the RSX(TM)report data into the local memory
    - Writing the RSX(TM)report data into the main memory
    - Conditional Rendering by RSX(TM), which referred the RSX(TM)report data
    - Culling by Cell Broadband Engine(TM), which referred the RSX(TM)report data

- samples/sdk/graphics/gcm/stereo_font
  A sample to override constant of fragment programs 

- samples/sdk/sound/demo/slope
  Sample for Changing the Sound Output through the Use of the wireless 
  controller Motion Sensor 
  This sample program uses a combination of libpad and libmstream. 
  The panpot and volume of the sound output changes according to the tilt,
   rotation, and up-and-down movement of the wireless controller.

- samples/sdk/sail/text_user_data
  A sample to show how to obtain user data of the PAMF file, using libsail

- samples/sdk/codec/m4aac_dec
  A sample to show how to decode/output MPEG-4 AAC audio, using libadec

- samples/tutorial/Controller/SixaxisPointer
  A sample to handle a wireless controller like handling a pointing device,
  using the six-axis sensor. 
  The pointing device feature of the sample is provided as a utility library 
  of the sample. 

- samples/tutorial/ImageProcessing/demosaic
  A sample to show how to use Render to Texture feature of RSX(TM) to 
  perform mosaic demo and noise reduction over images which are gained 
  from PLAYSTATION(R)Eye

Changes in project files
========================
The project file and the solution file for Visual Studio 2003, which are 
provided under the cell/samples, have been modified to support SNC PPU Toolchain

